--------------------
./configure
Fri Oct 24 19:38:34 CEST 2014
Checking for gcc...
=== ztest32165.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest32165.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest32165.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest32165.c

Checking for shared library support...
=== ztest32165.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest32165.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest32165.so ztest32165.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest32165.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32165.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest32165.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32165 ztest32165.c
Checking for strerror... Yes.

=== ztest32165.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32165.c
Checking for unistd.h... Yes.

=== ztest32165.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32165.c
Checking for stdarg.h... Yes.

=== ztest32165.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32165.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest32165.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32165 ztest32165.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest32165.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32165.c
Checking for return value of vsnprintf()... Yes.

=== ztest32165.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32165.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 18:25:48 CEST 2014
Checking for gcc...
=== ztest20980.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest20980.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20980.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest20980.c

Checking for shared library support...
=== ztest20980.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest20980.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20980.so ztest20980.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest20980.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20980.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20980.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20980 ztest20980.c
Checking for strerror... Yes.

=== ztest20980.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20980.c
Checking for unistd.h... Yes.

=== ztest20980.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20980.c
Checking for stdarg.h... Yes.

=== ztest20980.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20980.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20980.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20980 ztest20980.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20980.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20980.c
Checking for return value of vsnprintf()... Yes.

=== ztest20980.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20980.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 18:26:41 CEST 2014
Checking for gcc...
=== ztest21356.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21356.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21356.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21356.c

Checking for shared library support...
=== ztest21356.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21356.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21356.so ztest21356.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21356.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21356.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21356.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21356 ztest21356.c
Checking for strerror... Yes.

=== ztest21356.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21356.c
Checking for unistd.h... Yes.

=== ztest21356.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21356.c
Checking for stdarg.h... Yes.

=== ztest21356.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21356.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21356.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21356 ztest21356.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21356.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21356.c
Checking for return value of vsnprintf()... Yes.

=== ztest21356.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21356.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 18:52:59 CEST 2014
Checking for gcc...
=== ztest22559.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22559.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22559.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22559.c

Checking for shared library support...
=== ztest22559.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22559.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22559.so ztest22559.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22559.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22559.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22559.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22559 ztest22559.c
Checking for strerror... Yes.

=== ztest22559.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22559.c
Checking for unistd.h... Yes.

=== ztest22559.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22559.c
Checking for stdarg.h... Yes.

=== ztest22559.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22559.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22559.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22559 ztest22559.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22559.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22559.c
Checking for return value of vsnprintf()... Yes.

=== ztest22559.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22559.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 18:53:48 CEST 2014
Checking for gcc...
=== ztest22908.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22908.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22908.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22908.c

Checking for shared library support...
=== ztest22908.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22908.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22908.so ztest22908.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22908.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22908.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22908.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22908 ztest22908.c
Checking for strerror... Yes.

=== ztest22908.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22908.c
Checking for unistd.h... Yes.

=== ztest22908.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22908.c
Checking for stdarg.h... Yes.

=== ztest22908.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22908.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22908.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22908 ztest22908.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22908.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22908.c
Checking for return value of vsnprintf()... Yes.

=== ztest22908.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22908.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 18:54:35 CEST 2014
Checking for gcc...
=== ztest23239.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest23239.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23239.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest23239.c

Checking for shared library support...
=== ztest23239.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest23239.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23239.so ztest23239.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest23239.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23239.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23239.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23239 ztest23239.c
Checking for strerror... Yes.

=== ztest23239.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23239.c
Checking for unistd.h... Yes.

=== ztest23239.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23239.c
Checking for stdarg.h... Yes.

=== ztest23239.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23239.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23239.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23239 ztest23239.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23239.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23239.c
Checking for return value of vsnprintf()... Yes.

=== ztest23239.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23239.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 19:21:35 CEST 2014
Checking for gcc...
=== ztest24296.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest24296.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest24296.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest24296.c

Checking for shared library support...
=== ztest24296.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest24296.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest24296.so ztest24296.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest24296.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24296.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest24296.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24296 ztest24296.c
Checking for strerror... Yes.

=== ztest24296.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24296.c
Checking for unistd.h... Yes.

=== ztest24296.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24296.c
Checking for stdarg.h... Yes.

=== ztest24296.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24296.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest24296.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24296 ztest24296.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest24296.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24296.c
Checking for return value of vsnprintf()... Yes.

=== ztest24296.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24296.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 21:27:35 CEST 2014
Checking for gcc...
=== ztest26930.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest26930.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26930.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest26930.c

Checking for shared library support...
=== ztest26930.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest26930.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest26930.so ztest26930.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest26930.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26930.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26930.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26930 ztest26930.c
Checking for strerror... Yes.

=== ztest26930.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26930.c
Checking for unistd.h... Yes.

=== ztest26930.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26930.c
Checking for stdarg.h... Yes.

=== ztest26930.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26930.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26930.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26930 ztest26930.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26930.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26930.c
Checking for return value of vsnprintf()... Yes.

=== ztest26930.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26930.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 21:58:48 CEST 2014
Checking for gcc...
=== ztest30045.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest30045.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest30045.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest30045.c

Checking for shared library support...
=== ztest30045.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest30045.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest30045.so ztest30045.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest30045.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30045.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest30045.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30045 ztest30045.c
Checking for strerror... Yes.

=== ztest30045.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30045.c
Checking for unistd.h... Yes.

=== ztest30045.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30045.c
Checking for stdarg.h... Yes.

=== ztest30045.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30045.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest30045.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30045 ztest30045.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest30045.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30045.c
Checking for return value of vsnprintf()... Yes.

=== ztest30045.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30045.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 22:39:08 CEST 2014
Checking for gcc...
=== ztest31084.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31084.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31084.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31084.c

Checking for shared library support...
=== ztest31084.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31084.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31084.so ztest31084.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest31084.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31084.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31084.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31084 ztest31084.c
Checking for strerror... Yes.

=== ztest31084.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31084.c
Checking for unistd.h... Yes.

=== ztest31084.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31084.c
Checking for stdarg.h... Yes.

=== ztest31084.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31084.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31084.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31084 ztest31084.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31084.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31084.c
Checking for return value of vsnprintf()... Yes.

=== ztest31084.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31084.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 23:07:49 CEST 2014
Checking for gcc...
=== ztest559.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest559.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest559.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest559.c

Checking for shared library support...
=== ztest559.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest559.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest559.so ztest559.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest559.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest559.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest559.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest559 ztest559.c
Checking for strerror... Yes.

=== ztest559.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest559.c
Checking for unistd.h... Yes.

=== ztest559.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest559.c
Checking for stdarg.h... Yes.

=== ztest559.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest559.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest559.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest559 ztest559.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest559.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest559.c
Checking for return value of vsnprintf()... Yes.

=== ztest559.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest559.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 23:23:47 CEST 2014
Checking for gcc...
=== ztest2098.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2098.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2098.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2098.c

Checking for shared library support...
=== ztest2098.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2098.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2098.so ztest2098.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest2098.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2098.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2098.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2098 ztest2098.c
Checking for strerror... Yes.

=== ztest2098.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2098.c
Checking for unistd.h... Yes.

=== ztest2098.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2098.c
Checking for stdarg.h... Yes.

=== ztest2098.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2098.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2098.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2098 ztest2098.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2098.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2098.c
Checking for return value of vsnprintf()... Yes.

=== ztest2098.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2098.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 23:40:10 CEST 2014
Checking for gcc...
=== ztest2653.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2653.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2653.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2653.c

Checking for shared library support...
=== ztest2653.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2653.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2653.so ztest2653.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest2653.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2653.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2653.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2653 ztest2653.c
Checking for strerror... Yes.

=== ztest2653.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2653.c
Checking for unistd.h... Yes.

=== ztest2653.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2653.c
Checking for stdarg.h... Yes.

=== ztest2653.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2653.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2653.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2653 ztest2653.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2653.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2653.c
Checking for return value of vsnprintf()... Yes.

=== ztest2653.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2653.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat Oct 25 23:44:43 CEST 2014
Checking for gcc...
=== ztest2910.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2910.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2910.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2910.c

Checking for shared library support...
=== ztest2910.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2910.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2910.so ztest2910.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest2910.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2910.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2910.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2910 ztest2910.c
Checking for strerror... Yes.

=== ztest2910.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2910.c
Checking for unistd.h... Yes.

=== ztest2910.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2910.c
Checking for stdarg.h... Yes.

=== ztest2910.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2910.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2910.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2910 ztest2910.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2910.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2910.c
Checking for return value of vsnprintf()... Yes.

=== ztest2910.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2910.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sun Oct 26 14:25:04 CET 2014
Checking for gcc...
=== ztest8215.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest8215.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8215.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest8215.c

Checking for shared library support...
=== ztest8215.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest8215.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8215.so ztest8215.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest8215.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8215.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8215.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8215 ztest8215.c
Checking for strerror... Yes.

=== ztest8215.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8215.c
Checking for unistd.h... Yes.

=== ztest8215.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8215.c
Checking for stdarg.h... Yes.

=== ztest8215.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8215.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8215.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8215 ztest8215.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8215.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8215.c
Checking for return value of vsnprintf()... Yes.

=== ztest8215.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8215.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sun Oct 26 14:26:33 CET 2014
Checking for gcc...
=== ztest9153.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest9153.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9153.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest9153.c

Checking for shared library support...
=== ztest9153.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest9153.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9153.so ztest9153.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest9153.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9153.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9153.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9153 ztest9153.c
Checking for strerror... Yes.

=== ztest9153.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9153.c
Checking for unistd.h... Yes.

=== ztest9153.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9153.c
Checking for stdarg.h... Yes.

=== ztest9153.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9153.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9153.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9153 ztest9153.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9153.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9153.c
Checking for return value of vsnprintf()... Yes.

=== ztest9153.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9153.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:01:49 CET 2014
Checking for gcc...
=== ztest16767.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest16767.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest16767.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest16767.c

Checking for shared library support...
=== ztest16767.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest16767.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest16767.so ztest16767.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest16767.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16767.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest16767.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16767 ztest16767.c
Checking for strerror... Yes.

=== ztest16767.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16767.c
Checking for unistd.h... Yes.

=== ztest16767.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16767.c
Checking for stdarg.h... Yes.

=== ztest16767.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16767.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest16767.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16767 ztest16767.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest16767.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16767.c
Checking for return value of vsnprintf()... Yes.

=== ztest16767.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16767.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:05:43 CET 2014
Checking for gcc...
=== ztest17228.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest17228.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest17228.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest17228.c

Checking for shared library support...
=== ztest17228.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest17228.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest17228.so ztest17228.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest17228.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17228.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest17228.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17228 ztest17228.c
Checking for strerror... Yes.

=== ztest17228.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17228.c
Checking for unistd.h... Yes.

=== ztest17228.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17228.c
Checking for stdarg.h... Yes.

=== ztest17228.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17228.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest17228.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17228 ztest17228.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest17228.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17228.c
Checking for return value of vsnprintf()... Yes.

=== ztest17228.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17228.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:08:28 CET 2014
Checking for gcc...
=== ztest17658.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest17658.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest17658.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest17658.c

Checking for shared library support...
=== ztest17658.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest17658.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest17658.so ztest17658.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest17658.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17658.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest17658.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17658 ztest17658.c
Checking for strerror... Yes.

=== ztest17658.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17658.c
Checking for unistd.h... Yes.

=== ztest17658.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17658.c
Checking for stdarg.h... Yes.

=== ztest17658.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17658.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest17658.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17658 ztest17658.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest17658.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17658.c
Checking for return value of vsnprintf()... Yes.

=== ztest17658.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17658.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:10:47 CET 2014
Checking for gcc...
=== ztest18077.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest18077.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest18077.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest18077.c

Checking for shared library support...
=== ztest18077.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest18077.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest18077.so ztest18077.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest18077.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18077.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest18077.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18077 ztest18077.c
Checking for strerror... Yes.

=== ztest18077.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18077.c
Checking for unistd.h... Yes.

=== ztest18077.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18077.c
Checking for stdarg.h... Yes.

=== ztest18077.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18077.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest18077.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18077 ztest18077.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest18077.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18077.c
Checking for return value of vsnprintf()... Yes.

=== ztest18077.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18077.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:13:27 CET 2014
Checking for gcc...
=== ztest18532.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest18532.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest18532.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest18532.c

Checking for shared library support...
=== ztest18532.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest18532.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest18532.so ztest18532.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest18532.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18532.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest18532.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18532 ztest18532.c
Checking for strerror... Yes.

=== ztest18532.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18532.c
Checking for unistd.h... Yes.

=== ztest18532.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18532.c
Checking for stdarg.h... Yes.

=== ztest18532.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18532.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest18532.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18532 ztest18532.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest18532.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18532.c
Checking for return value of vsnprintf()... Yes.

=== ztest18532.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18532.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:15:54 CET 2014
Checking for gcc...
=== ztest18915.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest18915.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest18915.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest18915.c

Checking for shared library support...
=== ztest18915.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest18915.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest18915.so ztest18915.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest18915.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18915.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest18915.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18915 ztest18915.c
Checking for strerror... Yes.

=== ztest18915.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18915.c
Checking for unistd.h... Yes.

=== ztest18915.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18915.c
Checking for stdarg.h... Yes.

=== ztest18915.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18915.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest18915.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18915 ztest18915.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest18915.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18915.c
Checking for return value of vsnprintf()... Yes.

=== ztest18915.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18915.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:17:33 CET 2014
Checking for gcc...
=== ztest19315.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest19315.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19315.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest19315.c

Checking for shared library support...
=== ztest19315.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest19315.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19315.so ztest19315.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest19315.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19315.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19315.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19315 ztest19315.c
Checking for strerror... Yes.

=== ztest19315.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19315.c
Checking for unistd.h... Yes.

=== ztest19315.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19315.c
Checking for stdarg.h... Yes.

=== ztest19315.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19315.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19315.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19315 ztest19315.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19315.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19315.c
Checking for return value of vsnprintf()... Yes.

=== ztest19315.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19315.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:18:04 CET 2014
Checking for gcc...
=== ztest19654.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest19654.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19654.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest19654.c

Checking for shared library support...
=== ztest19654.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest19654.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19654.so ztest19654.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest19654.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19654.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19654.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19654 ztest19654.c
Checking for strerror... Yes.

=== ztest19654.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19654.c
Checking for unistd.h... Yes.

=== ztest19654.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19654.c
Checking for stdarg.h... Yes.

=== ztest19654.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19654.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19654.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19654 ztest19654.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19654.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19654.c
Checking for return value of vsnprintf()... Yes.

=== ztest19654.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19654.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:19:42 CET 2014
Checking for gcc...
=== ztest20017.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest20017.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20017.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest20017.c

Checking for shared library support...
=== ztest20017.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest20017.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20017.so ztest20017.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest20017.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20017.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20017.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20017 ztest20017.c
Checking for strerror... Yes.

=== ztest20017.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20017.c
Checking for unistd.h... Yes.

=== ztest20017.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20017.c
Checking for stdarg.h... Yes.

=== ztest20017.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20017.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20017.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20017 ztest20017.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20017.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20017.c
Checking for return value of vsnprintf()... Yes.

=== ztest20017.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20017.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:22:48 CET 2014
Checking for gcc...
=== ztest20447.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest20447.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20447.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest20447.c

Checking for shared library support...
=== ztest20447.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest20447.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20447.so ztest20447.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest20447.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20447.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20447.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20447 ztest20447.c
Checking for strerror... Yes.

=== ztest20447.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20447.c
Checking for unistd.h... Yes.

=== ztest20447.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20447.c
Checking for stdarg.h... Yes.

=== ztest20447.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20447.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20447.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20447 ztest20447.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20447.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20447.c
Checking for return value of vsnprintf()... Yes.

=== ztest20447.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20447.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:24:43 CET 2014
Checking for gcc...
=== ztest20798.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest20798.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20798.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest20798.c

Checking for shared library support...
=== ztest20798.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest20798.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20798.so ztest20798.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest20798.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20798.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20798.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20798 ztest20798.c
Checking for strerror... Yes.

=== ztest20798.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20798.c
Checking for unistd.h... Yes.

=== ztest20798.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20798.c
Checking for stdarg.h... Yes.

=== ztest20798.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20798.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20798.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20798 ztest20798.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20798.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20798.c
Checking for return value of vsnprintf()... Yes.

=== ztest20798.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20798.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:25:31 CET 2014
Checking for gcc...
=== ztest21149.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21149.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21149.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21149.c

Checking for shared library support...
=== ztest21149.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21149.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21149.so ztest21149.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21149.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21149.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21149.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21149 ztest21149.c
Checking for strerror... Yes.

=== ztest21149.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21149.c
Checking for unistd.h... Yes.

=== ztest21149.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21149.c
Checking for stdarg.h... Yes.

=== ztest21149.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21149.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21149.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21149 ztest21149.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21149.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21149.c
Checking for return value of vsnprintf()... Yes.

=== ztest21149.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21149.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:26:09 CET 2014
Checking for gcc...
=== ztest21498.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21498.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21498.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21498.c

Checking for shared library support...
=== ztest21498.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21498.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21498.so ztest21498.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21498.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21498.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21498.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21498 ztest21498.c
Checking for strerror... Yes.

=== ztest21498.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21498.c
Checking for unistd.h... Yes.

=== ztest21498.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21498.c
Checking for stdarg.h... Yes.

=== ztest21498.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21498.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21498.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21498 ztest21498.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21498.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21498.c
Checking for return value of vsnprintf()... Yes.

=== ztest21498.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21498.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:28:17 CET 2014
Checking for gcc...
=== ztest21862.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21862.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21862.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21862.c

Checking for shared library support...
=== ztest21862.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21862.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21862.so ztest21862.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21862.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21862.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21862.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21862 ztest21862.c
Checking for strerror... Yes.

=== ztest21862.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21862.c
Checking for unistd.h... Yes.

=== ztest21862.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21862.c
Checking for stdarg.h... Yes.

=== ztest21862.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21862.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21862.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21862 ztest21862.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21862.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21862.c
Checking for return value of vsnprintf()... Yes.

=== ztest21862.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21862.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:30:31 CET 2014
Checking for gcc...
=== ztest22280.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22280.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22280.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22280.c

Checking for shared library support...
=== ztest22280.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22280.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22280.so ztest22280.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22280.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22280.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22280.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22280 ztest22280.c
Checking for strerror... Yes.

=== ztest22280.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22280.c
Checking for unistd.h... Yes.

=== ztest22280.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22280.c
Checking for stdarg.h... Yes.

=== ztest22280.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22280.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22280.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22280 ztest22280.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22280.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22280.c
Checking for return value of vsnprintf()... Yes.

=== ztest22280.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22280.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:31:15 CET 2014
Checking for gcc...
=== ztest22624.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22624.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22624.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22624.c

Checking for shared library support...
=== ztest22624.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22624.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22624.so ztest22624.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22624.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22624.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22624.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22624 ztest22624.c
Checking for strerror... Yes.

=== ztest22624.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22624.c
Checking for unistd.h... Yes.

=== ztest22624.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22624.c
Checking for stdarg.h... Yes.

=== ztest22624.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22624.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22624.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22624 ztest22624.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22624.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22624.c
Checking for return value of vsnprintf()... Yes.

=== ztest22624.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22624.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:31:39 CET 2014
Checking for gcc...
=== ztest22967.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22967.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22967.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22967.c

Checking for shared library support...
=== ztest22967.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22967.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22967.so ztest22967.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22967.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22967.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22967.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22967 ztest22967.c
Checking for strerror... Yes.

=== ztest22967.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22967.c
Checking for unistd.h... Yes.

=== ztest22967.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22967.c
Checking for stdarg.h... Yes.

=== ztest22967.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22967.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22967.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22967 ztest22967.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22967.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22967.c
Checking for return value of vsnprintf()... Yes.

=== ztest22967.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22967.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:33:14 CET 2014
Checking for gcc...
=== ztest23340.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest23340.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23340.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest23340.c

Checking for shared library support...
=== ztest23340.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest23340.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23340.so ztest23340.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest23340.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23340.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23340.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23340 ztest23340.c
Checking for strerror... Yes.

=== ztest23340.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23340.c
Checking for unistd.h... Yes.

=== ztest23340.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23340.c
Checking for stdarg.h... Yes.

=== ztest23340.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23340.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23340.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23340 ztest23340.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23340.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23340.c
Checking for return value of vsnprintf()... Yes.

=== ztest23340.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23340.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:35:11 CET 2014
Checking for gcc...
=== ztest23709.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest23709.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23709.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest23709.c

Checking for shared library support...
=== ztest23709.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest23709.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23709.so ztest23709.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest23709.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23709.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23709.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23709 ztest23709.c
Checking for strerror... Yes.

=== ztest23709.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23709.c
Checking for unistd.h... Yes.

=== ztest23709.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23709.c
Checking for stdarg.h... Yes.

=== ztest23709.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23709.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23709.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23709 ztest23709.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23709.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23709.c
Checking for return value of vsnprintf()... Yes.

=== ztest23709.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23709.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:36:05 CET 2014
Checking for gcc...
=== ztest24059.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest24059.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest24059.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest24059.c

Checking for shared library support...
=== ztest24059.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest24059.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest24059.so ztest24059.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest24059.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24059.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest24059.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24059 ztest24059.c
Checking for strerror... Yes.

=== ztest24059.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24059.c
Checking for unistd.h... Yes.

=== ztest24059.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24059.c
Checking for stdarg.h... Yes.

=== ztest24059.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24059.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest24059.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24059 ztest24059.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest24059.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24059.c
Checking for return value of vsnprintf()... Yes.

=== ztest24059.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24059.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:38:25 CET 2014
Checking for gcc...
=== ztest24429.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest24429.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest24429.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest24429.c

Checking for shared library support...
=== ztest24429.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest24429.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest24429.so ztest24429.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest24429.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24429.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest24429.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24429 ztest24429.c
Checking for strerror... Yes.

=== ztest24429.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24429.c
Checking for unistd.h... Yes.

=== ztest24429.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24429.c
Checking for stdarg.h... Yes.

=== ztest24429.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24429.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest24429.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24429 ztest24429.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest24429.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24429.c
Checking for return value of vsnprintf()... Yes.

=== ztest24429.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24429.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:40:17 CET 2014
Checking for gcc...
=== ztest24829.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest24829.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest24829.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest24829.c

Checking for shared library support...
=== ztest24829.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest24829.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest24829.so ztest24829.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest24829.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24829.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest24829.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24829 ztest24829.c
Checking for strerror... Yes.

=== ztest24829.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24829.c
Checking for unistd.h... Yes.

=== ztest24829.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24829.c
Checking for stdarg.h... Yes.

=== ztest24829.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24829.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest24829.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24829 ztest24829.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest24829.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24829.c
Checking for return value of vsnprintf()... Yes.

=== ztest24829.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24829.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:41:28 CET 2014
Checking for gcc...
=== ztest25201.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest25201.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25201.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest25201.c

Checking for shared library support...
=== ztest25201.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest25201.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25201.so ztest25201.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest25201.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25201.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25201.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25201 ztest25201.c
Checking for strerror... Yes.

=== ztest25201.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25201.c
Checking for unistd.h... Yes.

=== ztest25201.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25201.c
Checking for stdarg.h... Yes.

=== ztest25201.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25201.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25201.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25201 ztest25201.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25201.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25201.c
Checking for return value of vsnprintf()... Yes.

=== ztest25201.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25201.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:42:05 CET 2014
Checking for gcc...
=== ztest25553.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest25553.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25553.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest25553.c

Checking for shared library support...
=== ztest25553.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest25553.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25553.so ztest25553.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest25553.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25553.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25553.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25553 ztest25553.c
Checking for strerror... Yes.

=== ztest25553.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25553.c
Checking for unistd.h... Yes.

=== ztest25553.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25553.c
Checking for stdarg.h... Yes.

=== ztest25553.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25553.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25553.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25553 ztest25553.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25553.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25553.c
Checking for return value of vsnprintf()... Yes.

=== ztest25553.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25553.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:43:03 CET 2014
Checking for gcc...
=== ztest25908.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest25908.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25908.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest25908.c

Checking for shared library support...
=== ztest25908.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest25908.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25908.so ztest25908.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest25908.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25908.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25908.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25908 ztest25908.c
Checking for strerror... Yes.

=== ztest25908.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25908.c
Checking for unistd.h... Yes.

=== ztest25908.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25908.c
Checking for stdarg.h... Yes.

=== ztest25908.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25908.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25908.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25908 ztest25908.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25908.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25908.c
Checking for return value of vsnprintf()... Yes.

=== ztest25908.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25908.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:46:44 CET 2014
Checking for gcc...
=== ztest26380.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest26380.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26380.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest26380.c

Checking for shared library support...
=== ztest26380.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest26380.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest26380.so ztest26380.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest26380.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26380.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26380.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26380 ztest26380.c
Checking for strerror... Yes.

=== ztest26380.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26380.c
Checking for unistd.h... Yes.

=== ztest26380.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26380.c
Checking for stdarg.h... Yes.

=== ztest26380.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26380.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26380.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26380 ztest26380.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26380.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26380.c
Checking for return value of vsnprintf()... Yes.

=== ztest26380.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26380.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 10:47:20 CET 2014
Checking for gcc...
=== ztest26730.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest26730.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26730.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest26730.c

Checking for shared library support...
=== ztest26730.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest26730.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest26730.so ztest26730.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest26730.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26730.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26730.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26730 ztest26730.c
Checking for strerror... Yes.

=== ztest26730.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26730.c
Checking for unistd.h... Yes.

=== ztest26730.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26730.c
Checking for stdarg.h... Yes.

=== ztest26730.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26730.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26730.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26730 ztest26730.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26730.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26730.c
Checking for return value of vsnprintf()... Yes.

=== ztest26730.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26730.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:03:05 CET 2014
Checking for gcc...
=== ztest27359.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest27359.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27359.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest27359.c

Checking for shared library support...
=== ztest27359.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest27359.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest27359.so ztest27359.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest27359.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27359.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27359.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27359 ztest27359.c
Checking for strerror... Yes.

=== ztest27359.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27359.c
Checking for unistd.h... Yes.

=== ztest27359.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27359.c
Checking for stdarg.h... Yes.

=== ztest27359.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27359.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27359.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27359 ztest27359.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27359.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27359.c
Checking for return value of vsnprintf()... Yes.

=== ztest27359.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27359.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:04:37 CET 2014
Checking for gcc...
=== ztest27740.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest27740.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27740.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest27740.c

Checking for shared library support...
=== ztest27740.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest27740.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest27740.so ztest27740.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest27740.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27740.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27740.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27740 ztest27740.c
Checking for strerror... Yes.

=== ztest27740.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27740.c
Checking for unistd.h... Yes.

=== ztest27740.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27740.c
Checking for stdarg.h... Yes.

=== ztest27740.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27740.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27740.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27740 ztest27740.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27740.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27740.c
Checking for return value of vsnprintf()... Yes.

=== ztest27740.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27740.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:05:14 CET 2014
Checking for gcc...
=== ztest28082.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest28082.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest28082.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest28082.c

Checking for shared library support...
=== ztest28082.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest28082.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest28082.so ztest28082.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest28082.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28082.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest28082.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28082 ztest28082.c
Checking for strerror... Yes.

=== ztest28082.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28082.c
Checking for unistd.h... Yes.

=== ztest28082.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28082.c
Checking for stdarg.h... Yes.

=== ztest28082.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28082.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest28082.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28082 ztest28082.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest28082.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28082.c
Checking for return value of vsnprintf()... Yes.

=== ztest28082.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28082.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:05:50 CET 2014
Checking for gcc...
=== ztest28424.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest28424.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest28424.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest28424.c

Checking for shared library support...
=== ztest28424.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest28424.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest28424.so ztest28424.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest28424.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28424.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest28424.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28424 ztest28424.c
Checking for strerror... Yes.

=== ztest28424.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28424.c
Checking for unistd.h... Yes.

=== ztest28424.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28424.c
Checking for stdarg.h... Yes.

=== ztest28424.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28424.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest28424.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28424 ztest28424.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest28424.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28424.c
Checking for return value of vsnprintf()... Yes.

=== ztest28424.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28424.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:11:14 CET 2014
Checking for gcc...
=== ztest28841.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest28841.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest28841.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest28841.c

Checking for shared library support...
=== ztest28841.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest28841.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest28841.so ztest28841.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest28841.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28841.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest28841.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28841 ztest28841.c
Checking for strerror... Yes.

=== ztest28841.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28841.c
Checking for unistd.h... Yes.

=== ztest28841.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28841.c
Checking for stdarg.h... Yes.

=== ztest28841.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28841.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest28841.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28841 ztest28841.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest28841.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28841.c
Checking for return value of vsnprintf()... Yes.

=== ztest28841.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28841.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:11:56 CET 2014
Checking for gcc...
=== ztest29197.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest29197.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest29197.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest29197.c

Checking for shared library support...
=== ztest29197.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest29197.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest29197.so ztest29197.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest29197.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29197.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest29197.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29197 ztest29197.c
Checking for strerror... Yes.

=== ztest29197.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29197.c
Checking for unistd.h... Yes.

=== ztest29197.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29197.c
Checking for stdarg.h... Yes.

=== ztest29197.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29197.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest29197.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29197 ztest29197.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest29197.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29197.c
Checking for return value of vsnprintf()... Yes.

=== ztest29197.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29197.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:21:38 CET 2014
Checking for gcc...
=== ztest29695.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest29695.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest29695.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest29695.c

Checking for shared library support...
=== ztest29695.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest29695.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest29695.so ztest29695.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest29695.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29695.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest29695.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29695 ztest29695.c
Checking for strerror... Yes.

=== ztest29695.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29695.c
Checking for unistd.h... Yes.

=== ztest29695.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29695.c
Checking for stdarg.h... Yes.

=== ztest29695.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29695.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest29695.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29695 ztest29695.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest29695.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29695.c
Checking for return value of vsnprintf()... Yes.

=== ztest29695.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29695.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:23:15 CET 2014
Checking for gcc...
=== ztest30080.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest30080.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest30080.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest30080.c

Checking for shared library support...
=== ztest30080.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest30080.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest30080.so ztest30080.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest30080.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30080.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest30080.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30080 ztest30080.c
Checking for strerror... Yes.

=== ztest30080.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30080.c
Checking for unistd.h... Yes.

=== ztest30080.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30080.c
Checking for stdarg.h... Yes.

=== ztest30080.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30080.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest30080.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30080 ztest30080.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest30080.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30080.c
Checking for return value of vsnprintf()... Yes.

=== ztest30080.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30080.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:47:10 CET 2014
Checking for gcc...
=== ztest31286.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31286.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31286.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31286.c

Checking for shared library support...
=== ztest31286.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31286.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31286.so ztest31286.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest31286.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31286.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31286.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31286 ztest31286.c
Checking for strerror... Yes.

=== ztest31286.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31286.c
Checking for unistd.h... Yes.

=== ztest31286.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31286.c
Checking for stdarg.h... Yes.

=== ztest31286.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31286.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31286.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31286 ztest31286.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31286.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31286.c
Checking for return value of vsnprintf()... Yes.

=== ztest31286.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31286.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:47:30 CET 2014
Checking for gcc...
=== ztest31615.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31615.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31615.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31615.c

Checking for shared library support...
=== ztest31615.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31615.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31615.so ztest31615.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest31615.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31615.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31615.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31615 ztest31615.c
Checking for strerror... Yes.

=== ztest31615.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31615.c
Checking for unistd.h... Yes.

=== ztest31615.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31615.c
Checking for stdarg.h... Yes.

=== ztest31615.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31615.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31615.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31615 ztest31615.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31615.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31615.c
Checking for return value of vsnprintf()... Yes.

=== ztest31615.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31615.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:50:56 CET 2014
Checking for gcc...
=== ztest31992.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31992.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31992.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31992.c

Checking for shared library support...
=== ztest31992.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31992.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31992.so ztest31992.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest31992.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31992.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31992.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31992 ztest31992.c
Checking for strerror... Yes.

=== ztest31992.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31992.c
Checking for unistd.h... Yes.

=== ztest31992.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31992.c
Checking for stdarg.h... Yes.

=== ztest31992.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31992.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31992.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31992 ztest31992.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31992.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31992.c
Checking for return value of vsnprintf()... Yes.

=== ztest31992.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31992.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:51:25 CET 2014
Checking for gcc...
=== ztest32318.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest32318.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest32318.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest32318.c

Checking for shared library support...
=== ztest32318.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest32318.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest32318.so ztest32318.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest32318.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32318.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest32318.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32318 ztest32318.c
Checking for strerror... Yes.

=== ztest32318.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32318.c
Checking for unistd.h... Yes.

=== ztest32318.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32318.c
Checking for stdarg.h... Yes.

=== ztest32318.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32318.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest32318.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32318 ztest32318.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest32318.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32318.c
Checking for return value of vsnprintf()... Yes.

=== ztest32318.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32318.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:51:59 CET 2014
Checking for gcc...
=== ztest32672.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest32672.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest32672.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest32672.c

Checking for shared library support...
=== ztest32672.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest32672.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest32672.so ztest32672.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest32672.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32672.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest32672.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32672 ztest32672.c
Checking for strerror... Yes.

=== ztest32672.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32672.c
Checking for unistd.h... Yes.

=== ztest32672.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32672.c
Checking for stdarg.h... Yes.

=== ztest32672.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32672.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest32672.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32672 ztest32672.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest32672.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32672.c
Checking for return value of vsnprintf()... Yes.

=== ztest32672.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32672.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:52:47 CET 2014
Checking for gcc...
=== ztest562.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest562.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest562.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest562.c

Checking for shared library support...
=== ztest562.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest562.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest562.so ztest562.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest562.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest562.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest562.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest562 ztest562.c
Checking for strerror... Yes.

=== ztest562.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest562.c
Checking for unistd.h... Yes.

=== ztest562.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest562.c
Checking for stdarg.h... Yes.

=== ztest562.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest562.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest562.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest562 ztest562.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest562.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest562.c
Checking for return value of vsnprintf()... Yes.

=== ztest562.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest562.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:58:38 CET 2014
Checking for gcc...
=== ztest1034.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1034.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1034.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1034.c

Checking for shared library support...
=== ztest1034.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1034.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1034.so ztest1034.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest1034.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1034.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1034.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1034 ztest1034.c
Checking for strerror... Yes.

=== ztest1034.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1034.c
Checking for unistd.h... Yes.

=== ztest1034.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1034.c
Checking for stdarg.h... Yes.

=== ztest1034.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1034.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1034.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1034 ztest1034.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1034.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1034.c
Checking for return value of vsnprintf()... Yes.

=== ztest1034.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1034.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:59:05 CET 2014
Checking for gcc...
=== ztest1394.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1394.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1394.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1394.c

Checking for shared library support...
=== ztest1394.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1394.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1394.so ztest1394.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest1394.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1394.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1394.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1394 ztest1394.c
Checking for strerror... Yes.

=== ztest1394.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1394.c
Checking for unistd.h... Yes.

=== ztest1394.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1394.c
Checking for stdarg.h... Yes.

=== ztest1394.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1394.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1394.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1394 ztest1394.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1394.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1394.c
Checking for return value of vsnprintf()... Yes.

=== ztest1394.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1394.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:59:15 CET 2014
Checking for gcc...
=== ztest1852.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1852.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1852.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1852.c

Checking for shared library support...
=== ztest1852.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1852.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1852.so ztest1852.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest1852.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1852.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1852.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1852 ztest1852.c
Checking for strerror... Yes.

=== ztest1852.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1852.c
Checking for unistd.h... Yes.

=== ztest1852.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1852.c
Checking for stdarg.h... Yes.

=== ztest1852.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1852.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1852.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1852 ztest1852.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1852.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1852.c
Checking for return value of vsnprintf()... Yes.

=== ztest1852.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1852.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 11:59:18 CET 2014
Checking for gcc...
=== ztest1999.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1999.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1999.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1999.c

Checking for shared library support...
=== ztest1999.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1999.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1999.so ztest1999.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest1999.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1999.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1999.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1999 ztest1999.c
Checking for strerror... Yes.

=== ztest1999.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1999.c
Checking for unistd.h... Yes.

=== ztest1999.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1999.c
Checking for stdarg.h... Yes.

=== ztest1999.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1999.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1999.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1999 ztest1999.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1999.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1999.c
Checking for return value of vsnprintf()... Yes.

=== ztest1999.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1999.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:00:12 CET 2014
Checking for gcc...
=== ztest2187.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2187.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2187.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2187.c

Checking for shared library support...
=== ztest2187.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2187.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2187.so ztest2187.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest2187.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2187.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2187.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2187 ztest2187.c
Checking for strerror... Yes.

=== ztest2187.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2187.c
Checking for unistd.h... Yes.

=== ztest2187.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2187.c
Checking for stdarg.h... Yes.

=== ztest2187.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2187.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2187.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2187 ztest2187.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2187.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2187.c
Checking for return value of vsnprintf()... Yes.

=== ztest2187.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2187.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:02:11 CET 2014
Checking for gcc...
=== ztest2580.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2580.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2580.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2580.c

Checking for shared library support...
=== ztest2580.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2580.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2580.so ztest2580.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest2580.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2580.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2580.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2580 ztest2580.c
Checking for strerror... Yes.

=== ztest2580.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2580.c
Checking for unistd.h... Yes.

=== ztest2580.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2580.c
Checking for stdarg.h... Yes.

=== ztest2580.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2580.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2580.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2580 ztest2580.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2580.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2580.c
Checking for return value of vsnprintf()... Yes.

=== ztest2580.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2580.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:02:51 CET 2014
Checking for gcc...
=== ztest2924.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2924.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2924.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2924.c

Checking for shared library support...
=== ztest2924.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2924.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2924.so ztest2924.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest2924.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2924.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2924.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2924 ztest2924.c
Checking for strerror... Yes.

=== ztest2924.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2924.c
Checking for unistd.h... Yes.

=== ztest2924.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2924.c
Checking for stdarg.h... Yes.

=== ztest2924.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2924.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2924.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2924 ztest2924.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2924.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2924.c
Checking for return value of vsnprintf()... Yes.

=== ztest2924.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2924.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:03:27 CET 2014
Checking for gcc...
=== ztest3265.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3265.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3265.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3265.c

Checking for shared library support...
=== ztest3265.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3265.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3265.so ztest3265.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest3265.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3265.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3265.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3265 ztest3265.c
Checking for strerror... Yes.

=== ztest3265.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3265.c
Checking for unistd.h... Yes.

=== ztest3265.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3265.c
Checking for stdarg.h... Yes.

=== ztest3265.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3265.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3265.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3265 ztest3265.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3265.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3265.c
Checking for return value of vsnprintf()... Yes.

=== ztest3265.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3265.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:04:04 CET 2014
Checking for gcc...
=== ztest3603.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3603.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3603.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3603.c

Checking for shared library support...
=== ztest3603.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3603.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3603.so ztest3603.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest3603.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3603.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3603.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3603 ztest3603.c
Checking for strerror... Yes.

=== ztest3603.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3603.c
Checking for unistd.h... Yes.

=== ztest3603.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3603.c
Checking for stdarg.h... Yes.

=== ztest3603.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3603.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3603.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3603 ztest3603.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3603.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3603.c
Checking for return value of vsnprintf()... Yes.

=== ztest3603.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3603.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:08:16 CET 2014
Checking for gcc...
=== ztest4052.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4052.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4052.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4052.c

Checking for shared library support...
=== ztest4052.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4052.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4052.so ztest4052.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest4052.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4052.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4052.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4052 ztest4052.c
Checking for strerror... Yes.

=== ztest4052.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4052.c
Checking for unistd.h... Yes.

=== ztest4052.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4052.c
Checking for stdarg.h... Yes.

=== ztest4052.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4052.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4052.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4052 ztest4052.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4052.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4052.c
Checking for return value of vsnprintf()... Yes.

=== ztest4052.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4052.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:09:15 CET 2014
Checking for gcc...
=== ztest4391.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4391.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4391.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4391.c

Checking for shared library support...
=== ztest4391.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4391.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4391.so ztest4391.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest4391.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4391.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4391.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4391 ztest4391.c
Checking for strerror... Yes.

=== ztest4391.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4391.c
Checking for unistd.h... Yes.

=== ztest4391.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4391.c
Checking for stdarg.h... Yes.

=== ztest4391.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4391.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4391.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4391 ztest4391.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4391.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4391.c
Checking for return value of vsnprintf()... Yes.

=== ztest4391.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4391.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:09:42 CET 2014
Checking for gcc...
=== ztest4739.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4739.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4739.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4739.c

Checking for shared library support...
=== ztest4739.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4739.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4739.so ztest4739.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest4739.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4739.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4739.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4739 ztest4739.c
Checking for strerror... Yes.

=== ztest4739.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4739.c
Checking for unistd.h... Yes.

=== ztest4739.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4739.c
Checking for stdarg.h... Yes.

=== ztest4739.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4739.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4739.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4739 ztest4739.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4739.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4739.c
Checking for return value of vsnprintf()... Yes.

=== ztest4739.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4739.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:12:29 CET 2014
Checking for gcc...
=== ztest5268.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5268.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5268.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5268.c

Checking for shared library support...
=== ztest5268.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5268.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5268.so ztest5268.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest5268.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5268.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5268.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5268 ztest5268.c
Checking for strerror... Yes.

=== ztest5268.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5268.c
Checking for unistd.h... Yes.

=== ztest5268.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5268.c
Checking for stdarg.h... Yes.

=== ztest5268.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5268.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5268.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5268 ztest5268.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5268.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5268.c
Checking for return value of vsnprintf()... Yes.

=== ztest5268.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5268.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:13:03 CET 2014
Checking for gcc...
=== ztest5609.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5609.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5609.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5609.c

Checking for shared library support...
=== ztest5609.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5609.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5609.so ztest5609.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest5609.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5609.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5609.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5609 ztest5609.c
Checking for strerror... Yes.

=== ztest5609.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5609.c
Checking for unistd.h... Yes.

=== ztest5609.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5609.c
Checking for stdarg.h... Yes.

=== ztest5609.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5609.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5609.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5609 ztest5609.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5609.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5609.c
Checking for return value of vsnprintf()... Yes.

=== ztest5609.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5609.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:13:25 CET 2014
Checking for gcc...
=== ztest5949.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5949.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5949.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5949.c

Checking for shared library support...
=== ztest5949.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5949.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5949.so ztest5949.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest5949.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5949.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5949.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5949 ztest5949.c
Checking for strerror... Yes.

=== ztest5949.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5949.c
Checking for unistd.h... Yes.

=== ztest5949.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5949.c
Checking for stdarg.h... Yes.

=== ztest5949.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5949.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5949.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5949 ztest5949.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5949.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5949.c
Checking for return value of vsnprintf()... Yes.

=== ztest5949.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5949.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:14:46 CET 2014
Checking for gcc...
=== ztest6391.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest6391.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6391.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest6391.c

Checking for shared library support...
=== ztest6391.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest6391.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6391.so ztest6391.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest6391.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6391.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6391.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6391 ztest6391.c
Checking for strerror... Yes.

=== ztest6391.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6391.c
Checking for unistd.h... Yes.

=== ztest6391.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6391.c
Checking for stdarg.h... Yes.

=== ztest6391.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6391.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6391.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6391 ztest6391.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6391.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6391.c
Checking for return value of vsnprintf()... Yes.

=== ztest6391.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6391.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:17:37 CET 2014
Checking for gcc...
=== ztest6867.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest6867.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6867.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest6867.c

Checking for shared library support...
=== ztest6867.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest6867.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6867.so ztest6867.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest6867.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6867.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6867.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6867 ztest6867.c
Checking for strerror... Yes.

=== ztest6867.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6867.c
Checking for unistd.h... Yes.

=== ztest6867.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6867.c
Checking for stdarg.h... Yes.

=== ztest6867.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6867.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6867.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6867 ztest6867.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6867.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6867.c
Checking for return value of vsnprintf()... Yes.

=== ztest6867.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6867.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:19:36 CET 2014
Checking for gcc...
=== ztest7327.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest7327.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7327.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest7327.c

Checking for shared library support...
=== ztest7327.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest7327.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7327.so ztest7327.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest7327.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7327.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7327.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7327 ztest7327.c
Checking for strerror... Yes.

=== ztest7327.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7327.c
Checking for unistd.h... Yes.

=== ztest7327.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7327.c
Checking for stdarg.h... Yes.

=== ztest7327.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7327.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7327.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7327 ztest7327.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7327.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7327.c
Checking for return value of vsnprintf()... Yes.

=== ztest7327.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7327.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:20:02 CET 2014
Checking for gcc...
=== ztest7666.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest7666.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7666.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest7666.c

Checking for shared library support...
=== ztest7666.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest7666.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7666.so ztest7666.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest7666.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7666.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7666.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7666 ztest7666.c
Checking for strerror... Yes.

=== ztest7666.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7666.c
Checking for unistd.h... Yes.

=== ztest7666.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7666.c
Checking for stdarg.h... Yes.

=== ztest7666.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7666.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7666.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7666 ztest7666.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7666.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7666.c
Checking for return value of vsnprintf()... Yes.

=== ztest7666.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7666.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:20:56 CET 2014
Checking for gcc...
=== ztest7934.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest7934.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7934.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest7934.c

Checking for shared library support...
=== ztest7934.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest7934.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7934.so ztest7934.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest7934.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7934.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7934.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7934 ztest7934.c
Checking for strerror... Yes.

=== ztest7934.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7934.c
Checking for unistd.h... Yes.

=== ztest7934.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7934.c
Checking for stdarg.h... Yes.

=== ztest7934.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7934.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7934.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7934 ztest7934.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7934.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7934.c
Checking for return value of vsnprintf()... Yes.

=== ztest7934.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7934.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:22:28 CET 2014
Checking for gcc...
=== ztest8393.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest8393.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8393.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest8393.c

Checking for shared library support...
=== ztest8393.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest8393.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8393.so ztest8393.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest8393.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8393.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8393.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8393 ztest8393.c
Checking for strerror... Yes.

=== ztest8393.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8393.c
Checking for unistd.h... Yes.

=== ztest8393.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8393.c
Checking for stdarg.h... Yes.

=== ztest8393.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8393.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8393.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8393 ztest8393.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8393.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8393.c
Checking for return value of vsnprintf()... Yes.

=== ztest8393.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8393.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:23:20 CET 2014
Checking for gcc...
=== ztest8724.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest8724.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8724.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest8724.c

Checking for shared library support...
=== ztest8724.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest8724.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8724.so ztest8724.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest8724.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8724.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8724.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8724 ztest8724.c
Checking for strerror... Yes.

=== ztest8724.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8724.c
Checking for unistd.h... Yes.

=== ztest8724.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8724.c
Checking for stdarg.h... Yes.

=== ztest8724.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8724.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8724.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8724 ztest8724.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8724.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8724.c
Checking for return value of vsnprintf()... Yes.

=== ztest8724.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8724.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:23:25 CET 2014
Checking for gcc...
=== ztest8969.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest8969.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8969.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest8969.c

Checking for shared library support...
=== ztest8969.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest8969.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8969.so ztest8969.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest8969.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8969.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8969.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8969 ztest8969.c
Checking for strerror... Yes.

=== ztest8969.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8969.c
Checking for unistd.h... Yes.

=== ztest8969.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8969.c
Checking for stdarg.h... Yes.

=== ztest8969.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8969.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8969.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8969 ztest8969.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8969.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8969.c
Checking for return value of vsnprintf()... Yes.

=== ztest8969.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8969.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:23:59 CET 2014
Checking for gcc...
=== ztest9405.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest9405.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9405.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest9405.c

Checking for shared library support...
=== ztest9405.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest9405.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9405.so ztest9405.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest9405.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9405.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9405.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9405 ztest9405.c
Checking for strerror... Yes.

=== ztest9405.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9405.c
Checking for unistd.h... Yes.

=== ztest9405.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9405.c
Checking for stdarg.h... Yes.

=== ztest9405.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9405.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9405.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9405 ztest9405.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9405.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9405.c
Checking for return value of vsnprintf()... Yes.

=== ztest9405.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9405.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:24:35 CET 2014
Checking for gcc...
=== ztest9848.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest9848.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9848.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest9848.c

Checking for shared library support...
=== ztest9848.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest9848.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9848.so ztest9848.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest9848.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9848.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9848.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9848 ztest9848.c
Checking for strerror... Yes.

=== ztest9848.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9848.c
Checking for unistd.h... Yes.

=== ztest9848.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9848.c
Checking for stdarg.h... Yes.

=== ztest9848.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9848.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9848.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9848 ztest9848.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9848.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9848.c
Checking for return value of vsnprintf()... Yes.

=== ztest9848.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9848.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:25:10 CET 2014
Checking for gcc...
=== ztest10203.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest10203.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10203.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest10203.c

Checking for shared library support...
=== ztest10203.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest10203.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10203.so ztest10203.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest10203.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10203.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10203.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10203 ztest10203.c
Checking for strerror... Yes.

=== ztest10203.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10203.c
Checking for unistd.h... Yes.

=== ztest10203.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10203.c
Checking for stdarg.h... Yes.

=== ztest10203.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10203.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10203.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10203 ztest10203.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10203.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10203.c
Checking for return value of vsnprintf()... Yes.

=== ztest10203.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10203.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:25:48 CET 2014
Checking for gcc...
=== ztest10540.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest10540.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10540.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest10540.c

Checking for shared library support...
=== ztest10540.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest10540.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10540.so ztest10540.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest10540.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10540.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10540.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10540 ztest10540.c
Checking for strerror... Yes.

=== ztest10540.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10540.c
Checking for unistd.h... Yes.

=== ztest10540.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10540.c
Checking for stdarg.h... Yes.

=== ztest10540.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10540.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10540.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10540 ztest10540.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10540.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10540.c
Checking for return value of vsnprintf()... Yes.

=== ztest10540.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10540.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:26:36 CET 2014
Checking for gcc...
=== ztest10888.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest10888.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10888.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest10888.c

Checking for shared library support...
=== ztest10888.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest10888.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10888.so ztest10888.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest10888.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10888.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10888.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10888 ztest10888.c
Checking for strerror... Yes.

=== ztest10888.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10888.c
Checking for unistd.h... Yes.

=== ztest10888.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10888.c
Checking for stdarg.h... Yes.

=== ztest10888.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10888.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10888.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10888 ztest10888.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10888.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10888.c
Checking for return value of vsnprintf()... Yes.

=== ztest10888.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10888.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:26:57 CET 2014
Checking for gcc...
=== ztest11229.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest11229.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11229.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest11229.c

Checking for shared library support...
=== ztest11229.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest11229.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11229.so ztest11229.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest11229.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11229.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11229.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11229 ztest11229.c
Checking for strerror... Yes.

=== ztest11229.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11229.c
Checking for unistd.h... Yes.

=== ztest11229.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11229.c
Checking for stdarg.h... Yes.

=== ztest11229.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11229.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11229.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11229 ztest11229.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11229.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11229.c
Checking for return value of vsnprintf()... Yes.

=== ztest11229.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11229.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:27:58 CET 2014
Checking for gcc...
=== ztest11576.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest11576.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11576.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest11576.c

Checking for shared library support...
=== ztest11576.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest11576.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11576.so ztest11576.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest11576.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11576.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11576.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11576 ztest11576.c
Checking for strerror... Yes.

=== ztest11576.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11576.c
Checking for unistd.h... Yes.

=== ztest11576.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11576.c
Checking for stdarg.h... Yes.

=== ztest11576.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11576.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11576.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11576 ztest11576.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11576.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11576.c
Checking for return value of vsnprintf()... Yes.

=== ztest11576.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11576.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:29:32 CET 2014
Checking for gcc...
=== ztest11925.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest11925.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11925.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest11925.c

Checking for shared library support...
=== ztest11925.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest11925.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11925.so ztest11925.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest11925.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11925.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11925.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11925 ztest11925.c
Checking for strerror... Yes.

=== ztest11925.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11925.c
Checking for unistd.h... Yes.

=== ztest11925.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11925.c
Checking for stdarg.h... Yes.

=== ztest11925.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11925.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11925.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11925 ztest11925.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11925.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11925.c
Checking for return value of vsnprintf()... Yes.

=== ztest11925.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11925.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:30:01 CET 2014
Checking for gcc...
=== ztest12263.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest12263.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest12263.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest12263.c

Checking for shared library support...
=== ztest12263.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest12263.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest12263.so ztest12263.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest12263.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12263.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest12263.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12263 ztest12263.c
Checking for strerror... Yes.

=== ztest12263.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12263.c
Checking for unistd.h... Yes.

=== ztest12263.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12263.c
Checking for stdarg.h... Yes.

=== ztest12263.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12263.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest12263.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12263 ztest12263.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest12263.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12263.c
Checking for return value of vsnprintf()... Yes.

=== ztest12263.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12263.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:30:52 CET 2014
Checking for gcc...
=== ztest12637.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest12637.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest12637.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest12637.c

Checking for shared library support...
=== ztest12637.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest12637.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest12637.so ztest12637.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest12637.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12637.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest12637.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12637 ztest12637.c
Checking for strerror... Yes.

=== ztest12637.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12637.c
Checking for unistd.h... Yes.

=== ztest12637.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12637.c
Checking for stdarg.h... Yes.

=== ztest12637.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12637.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest12637.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12637 ztest12637.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest12637.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12637.c
Checking for return value of vsnprintf()... Yes.

=== ztest12637.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12637.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:32:27 CET 2014
Checking for gcc...
=== ztest13013.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest13013.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13013.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest13013.c

Checking for shared library support...
=== ztest13013.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest13013.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest13013.so ztest13013.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest13013.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13013.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13013.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13013 ztest13013.c
Checking for strerror... Yes.

=== ztest13013.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13013.c
Checking for unistd.h... Yes.

=== ztest13013.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13013.c
Checking for stdarg.h... Yes.

=== ztest13013.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13013.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13013.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13013 ztest13013.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13013.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13013.c
Checking for return value of vsnprintf()... Yes.

=== ztest13013.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13013.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:33:02 CET 2014
Checking for gcc...
=== ztest13352.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest13352.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13352.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest13352.c

Checking for shared library support...
=== ztest13352.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest13352.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest13352.so ztest13352.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest13352.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13352.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13352.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13352 ztest13352.c
Checking for strerror... Yes.

=== ztest13352.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13352.c
Checking for unistd.h... Yes.

=== ztest13352.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13352.c
Checking for stdarg.h... Yes.

=== ztest13352.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13352.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13352.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13352 ztest13352.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13352.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13352.c
Checking for return value of vsnprintf()... Yes.

=== ztest13352.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13352.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 12:55:02 CET 2014
Checking for gcc...
=== ztest14324.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest14324.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest14324.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest14324.c

Checking for shared library support...
=== ztest14324.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest14324.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest14324.so ztest14324.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest14324.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14324.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest14324.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14324 ztest14324.c
Checking for strerror... Yes.

=== ztest14324.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14324.c
Checking for unistd.h... Yes.

=== ztest14324.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14324.c
Checking for stdarg.h... Yes.

=== ztest14324.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14324.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest14324.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14324 ztest14324.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest14324.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14324.c
Checking for return value of vsnprintf()... Yes.

=== ztest14324.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14324.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:04:05 CET 2014
Checking for gcc...
=== ztest14846.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest14846.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest14846.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest14846.c

Checking for shared library support...
=== ztest14846.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest14846.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest14846.so ztest14846.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest14846.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14846.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest14846.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14846 ztest14846.c
Checking for strerror... Yes.

=== ztest14846.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14846.c
Checking for unistd.h... Yes.

=== ztest14846.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14846.c
Checking for stdarg.h... Yes.

=== ztest14846.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14846.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest14846.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14846 ztest14846.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest14846.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14846.c
Checking for return value of vsnprintf()... Yes.

=== ztest14846.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14846.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:08:52 CET 2014
Checking for gcc...
=== ztest15337.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest15337.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest15337.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest15337.c

Checking for shared library support...
=== ztest15337.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest15337.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest15337.so ztest15337.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest15337.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15337.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest15337.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15337 ztest15337.c
Checking for strerror... Yes.

=== ztest15337.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15337.c
Checking for unistd.h... Yes.

=== ztest15337.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15337.c
Checking for stdarg.h... Yes.

=== ztest15337.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15337.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest15337.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15337 ztest15337.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest15337.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15337.c
Checking for return value of vsnprintf()... Yes.

=== ztest15337.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15337.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:09:45 CET 2014
Checking for gcc...
=== ztest15815.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest15815.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest15815.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest15815.c

Checking for shared library support...
=== ztest15815.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest15815.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest15815.so ztest15815.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest15815.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15815.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest15815.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15815 ztest15815.c
Checking for strerror... Yes.

=== ztest15815.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15815.c
Checking for unistd.h... Yes.

=== ztest15815.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15815.c
Checking for stdarg.h... Yes.

=== ztest15815.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15815.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest15815.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15815 ztest15815.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest15815.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15815.c
Checking for return value of vsnprintf()... Yes.

=== ztest15815.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15815.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:13:35 CET 2014
Checking for gcc...
=== ztest16292.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest16292.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest16292.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest16292.c

Checking for shared library support...
=== ztest16292.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest16292.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest16292.so ztest16292.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest16292.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16292.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest16292.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16292 ztest16292.c
Checking for strerror... Yes.

=== ztest16292.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16292.c
Checking for unistd.h... Yes.

=== ztest16292.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16292.c
Checking for stdarg.h... Yes.

=== ztest16292.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16292.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest16292.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16292 ztest16292.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest16292.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16292.c
Checking for return value of vsnprintf()... Yes.

=== ztest16292.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16292.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:13:56 CET 2014
Checking for gcc...
=== ztest16610.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest16610.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest16610.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest16610.c

Checking for shared library support...
=== ztest16610.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest16610.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest16610.so ztest16610.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest16610.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16610.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest16610.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16610 ztest16610.c
Checking for strerror... Yes.

=== ztest16610.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16610.c
Checking for unistd.h... Yes.

=== ztest16610.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16610.c
Checking for stdarg.h... Yes.

=== ztest16610.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16610.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest16610.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16610 ztest16610.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest16610.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16610.c
Checking for return value of vsnprintf()... Yes.

=== ztest16610.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16610.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:19:57 CET 2014
Checking for gcc...
=== ztest17147.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest17147.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest17147.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest17147.c

Checking for shared library support...
=== ztest17147.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest17147.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest17147.so ztest17147.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest17147.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17147.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest17147.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17147 ztest17147.c
Checking for strerror... Yes.

=== ztest17147.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17147.c
Checking for unistd.h... Yes.

=== ztest17147.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17147.c
Checking for stdarg.h... Yes.

=== ztest17147.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17147.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest17147.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17147 ztest17147.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest17147.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17147.c
Checking for return value of vsnprintf()... Yes.

=== ztest17147.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17147.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:20:28 CET 2014
Checking for gcc...
=== ztest17486.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest17486.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest17486.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest17486.c

Checking for shared library support...
=== ztest17486.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest17486.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest17486.so ztest17486.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest17486.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17486.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest17486.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17486 ztest17486.c
Checking for strerror... Yes.

=== ztest17486.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17486.c
Checking for unistd.h... Yes.

=== ztest17486.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17486.c
Checking for stdarg.h... Yes.

=== ztest17486.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17486.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest17486.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17486 ztest17486.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest17486.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17486.c
Checking for return value of vsnprintf()... Yes.

=== ztest17486.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17486.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:21:12 CET 2014
Checking for gcc...
=== ztest17828.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest17828.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest17828.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest17828.c

Checking for shared library support...
=== ztest17828.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest17828.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest17828.so ztest17828.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest17828.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17828.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest17828.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17828 ztest17828.c
Checking for strerror... Yes.

=== ztest17828.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17828.c
Checking for unistd.h... Yes.

=== ztest17828.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17828.c
Checking for stdarg.h... Yes.

=== ztest17828.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17828.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest17828.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17828 ztest17828.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest17828.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17828.c
Checking for return value of vsnprintf()... Yes.

=== ztest17828.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17828.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:21:40 CET 2014
Checking for gcc...
=== ztest18190.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest18190.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest18190.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest18190.c

Checking for shared library support...
=== ztest18190.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest18190.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest18190.so ztest18190.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest18190.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18190.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest18190.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18190 ztest18190.c
Checking for strerror... Yes.

=== ztest18190.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18190.c
Checking for unistd.h... Yes.

=== ztest18190.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18190.c
Checking for stdarg.h... Yes.

=== ztest18190.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18190.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest18190.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18190 ztest18190.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest18190.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18190.c
Checking for return value of vsnprintf()... Yes.

=== ztest18190.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18190.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:22:26 CET 2014
Checking for gcc...
=== ztest18544.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest18544.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest18544.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest18544.c

Checking for shared library support...
=== ztest18544.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest18544.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest18544.so ztest18544.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest18544.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18544.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest18544.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18544 ztest18544.c
Checking for strerror... Yes.

=== ztest18544.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18544.c
Checking for unistd.h... Yes.

=== ztest18544.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18544.c
Checking for stdarg.h... Yes.

=== ztest18544.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18544.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest18544.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18544 ztest18544.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest18544.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18544.c
Checking for return value of vsnprintf()... Yes.

=== ztest18544.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18544.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:23:11 CET 2014
Checking for gcc...
=== ztest18889.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest18889.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest18889.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest18889.c

Checking for shared library support...
=== ztest18889.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest18889.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest18889.so ztest18889.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest18889.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18889.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest18889.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18889 ztest18889.c
Checking for strerror... Yes.

=== ztest18889.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18889.c
Checking for unistd.h... Yes.

=== ztest18889.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18889.c
Checking for stdarg.h... Yes.

=== ztest18889.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18889.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest18889.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18889 ztest18889.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest18889.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18889.c
Checking for return value of vsnprintf()... Yes.

=== ztest18889.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18889.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:23:51 CET 2014
Checking for gcc...
=== ztest19261.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest19261.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19261.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest19261.c

Checking for shared library support...
=== ztest19261.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest19261.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19261.so ztest19261.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest19261.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19261.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19261.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19261 ztest19261.c
Checking for strerror... Yes.

=== ztest19261.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19261.c
Checking for unistd.h... Yes.

=== ztest19261.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19261.c
Checking for stdarg.h... Yes.

=== ztest19261.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19261.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19261.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19261 ztest19261.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19261.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19261.c
Checking for return value of vsnprintf()... Yes.

=== ztest19261.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19261.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:31:52 CET 2014
Checking for gcc...
=== ztest19767.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest19767.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19767.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest19767.c

Checking for shared library support...
=== ztest19767.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest19767.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19767.so ztest19767.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest19767.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19767.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19767.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19767 ztest19767.c
Checking for strerror... Yes.

=== ztest19767.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19767.c
Checking for unistd.h... Yes.

=== ztest19767.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19767.c
Checking for stdarg.h... Yes.

=== ztest19767.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19767.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19767.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19767 ztest19767.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19767.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19767.c
Checking for return value of vsnprintf()... Yes.

=== ztest19767.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19767.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:40:26 CET 2014
Checking for gcc...
=== ztest20305.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest20305.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20305.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest20305.c

Checking for shared library support...
=== ztest20305.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest20305.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20305.so ztest20305.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest20305.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20305.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20305.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20305 ztest20305.c
Checking for strerror... Yes.

=== ztest20305.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20305.c
Checking for unistd.h... Yes.

=== ztest20305.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20305.c
Checking for stdarg.h... Yes.

=== ztest20305.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20305.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20305.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20305 ztest20305.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20305.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20305.c
Checking for return value of vsnprintf()... Yes.

=== ztest20305.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20305.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:42:25 CET 2014
Checking for gcc...
=== ztest20687.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest20687.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20687.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest20687.c

Checking for shared library support...
=== ztest20687.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest20687.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20687.so ztest20687.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest20687.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20687.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20687.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20687 ztest20687.c
Checking for strerror... Yes.

=== ztest20687.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20687.c
Checking for unistd.h... Yes.

=== ztest20687.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20687.c
Checking for stdarg.h... Yes.

=== ztest20687.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20687.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20687.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20687 ztest20687.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20687.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20687.c
Checking for return value of vsnprintf()... Yes.

=== ztest20687.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20687.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:43:48 CET 2014
Checking for gcc...
=== ztest21074.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21074.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21074.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21074.c

Checking for shared library support...
=== ztest21074.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21074.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21074.so ztest21074.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21074.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21074.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21074.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21074 ztest21074.c
Checking for strerror... Yes.

=== ztest21074.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21074.c
Checking for unistd.h... Yes.

=== ztest21074.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21074.c
Checking for stdarg.h... Yes.

=== ztest21074.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21074.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21074.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21074 ztest21074.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21074.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21074.c
Checking for return value of vsnprintf()... Yes.

=== ztest21074.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21074.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:45:36 CET 2014
Checking for gcc...
=== ztest21470.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21470.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21470.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21470.c

Checking for shared library support...
=== ztest21470.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21470.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21470.so ztest21470.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21470.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21470.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21470.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21470 ztest21470.c
Checking for strerror... Yes.

=== ztest21470.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21470.c
Checking for unistd.h... Yes.

=== ztest21470.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21470.c
Checking for stdarg.h... Yes.

=== ztest21470.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21470.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21470.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21470 ztest21470.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21470.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21470.c
Checking for return value of vsnprintf()... Yes.

=== ztest21470.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21470.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:46:47 CET 2014
Checking for gcc...
=== ztest21807.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21807.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21807.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21807.c

Checking for shared library support...
=== ztest21807.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21807.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21807.so ztest21807.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21807.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21807.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21807.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21807 ztest21807.c
Checking for strerror... Yes.

=== ztest21807.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21807.c
Checking for unistd.h... Yes.

=== ztest21807.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21807.c
Checking for stdarg.h... Yes.

=== ztest21807.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21807.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21807.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21807 ztest21807.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21807.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21807.c
Checking for return value of vsnprintf()... Yes.

=== ztest21807.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21807.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:48:01 CET 2014
Checking for gcc...
=== ztest22164.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22164.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22164.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22164.c

Checking for shared library support...
=== ztest22164.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22164.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22164.so ztest22164.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22164.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22164.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22164.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22164 ztest22164.c
Checking for strerror... Yes.

=== ztest22164.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22164.c
Checking for unistd.h... Yes.

=== ztest22164.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22164.c
Checking for stdarg.h... Yes.

=== ztest22164.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22164.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22164.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22164 ztest22164.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22164.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22164.c
Checking for return value of vsnprintf()... Yes.

=== ztest22164.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22164.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:49:12 CET 2014
Checking for gcc...
=== ztest22506.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22506.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22506.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22506.c

Checking for shared library support...
=== ztest22506.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22506.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22506.so ztest22506.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22506.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22506.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22506.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22506 ztest22506.c
Checking for strerror... Yes.

=== ztest22506.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22506.c
Checking for unistd.h... Yes.

=== ztest22506.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22506.c
Checking for stdarg.h... Yes.

=== ztest22506.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22506.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22506.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22506 ztest22506.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22506.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22506.c
Checking for return value of vsnprintf()... Yes.

=== ztest22506.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22506.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:50:04 CET 2014
Checking for gcc...
=== ztest22874.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22874.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22874.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22874.c

Checking for shared library support...
=== ztest22874.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22874.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22874.so ztest22874.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22874.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22874.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22874.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22874 ztest22874.c
Checking for strerror... Yes.

=== ztest22874.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22874.c
Checking for unistd.h... Yes.

=== ztest22874.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22874.c
Checking for stdarg.h... Yes.

=== ztest22874.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22874.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22874.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22874 ztest22874.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22874.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22874.c
Checking for return value of vsnprintf()... Yes.

=== ztest22874.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22874.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:50:35 CET 2014
Checking for gcc...
=== ztest23215.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest23215.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23215.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest23215.c

Checking for shared library support...
=== ztest23215.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest23215.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23215.so ztest23215.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest23215.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23215.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23215.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23215 ztest23215.c
Checking for strerror... Yes.

=== ztest23215.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23215.c
Checking for unistd.h... Yes.

=== ztest23215.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23215.c
Checking for stdarg.h... Yes.

=== ztest23215.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23215.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23215.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23215 ztest23215.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23215.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23215.c
Checking for return value of vsnprintf()... Yes.

=== ztest23215.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23215.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:52:08 CET 2014
Checking for gcc...
=== ztest23570.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest23570.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23570.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest23570.c

Checking for shared library support...
=== ztest23570.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest23570.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23570.so ztest23570.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest23570.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23570.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23570.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23570 ztest23570.c
Checking for strerror... Yes.

=== ztest23570.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23570.c
Checking for unistd.h... Yes.

=== ztest23570.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23570.c
Checking for stdarg.h... Yes.

=== ztest23570.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23570.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23570.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23570 ztest23570.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23570.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23570.c
Checking for return value of vsnprintf()... Yes.

=== ztest23570.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23570.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:52:51 CET 2014
Checking for gcc...
=== ztest23934.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest23934.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23934.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest23934.c

Checking for shared library support...
=== ztest23934.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest23934.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23934.so ztest23934.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest23934.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23934.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23934.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23934 ztest23934.c
Checking for strerror... Yes.

=== ztest23934.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23934.c
Checking for unistd.h... Yes.

=== ztest23934.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23934.c
Checking for stdarg.h... Yes.

=== ztest23934.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23934.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23934.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23934 ztest23934.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23934.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23934.c
Checking for return value of vsnprintf()... Yes.

=== ztest23934.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23934.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 13:53:21 CET 2014
Checking for gcc...
=== ztest24280.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest24280.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest24280.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest24280.c

Checking for shared library support...
=== ztest24280.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest24280.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest24280.so ztest24280.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest24280.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24280.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest24280.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24280 ztest24280.c
Checking for strerror... Yes.

=== ztest24280.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24280.c
Checking for unistd.h... Yes.

=== ztest24280.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24280.c
Checking for stdarg.h... Yes.

=== ztest24280.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24280.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest24280.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24280 ztest24280.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest24280.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24280.c
Checking for return value of vsnprintf()... Yes.

=== ztest24280.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24280.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 14:02:57 CET 2014
Checking for gcc...
=== ztest24794.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest24794.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest24794.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest24794.c

Checking for shared library support...
=== ztest24794.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest24794.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest24794.so ztest24794.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest24794.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24794.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest24794.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24794 ztest24794.c
Checking for strerror... Yes.

=== ztest24794.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24794.c
Checking for unistd.h... Yes.

=== ztest24794.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24794.c
Checking for stdarg.h... Yes.

=== ztest24794.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24794.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest24794.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24794 ztest24794.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest24794.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24794.c
Checking for return value of vsnprintf()... Yes.

=== ztest24794.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24794.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 14:03:54 CET 2014
Checking for gcc...
=== ztest25222.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest25222.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25222.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest25222.c

Checking for shared library support...
=== ztest25222.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest25222.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25222.so ztest25222.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest25222.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25222.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25222.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25222 ztest25222.c
Checking for strerror... Yes.

=== ztest25222.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25222.c
Checking for unistd.h... Yes.

=== ztest25222.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25222.c
Checking for stdarg.h... Yes.

=== ztest25222.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25222.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25222.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25222 ztest25222.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25222.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25222.c
Checking for return value of vsnprintf()... Yes.

=== ztest25222.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25222.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 15:34:16 CET 2014
Checking for gcc...
=== ztest27624.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest27624.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27624.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest27624.c

Checking for shared library support...
=== ztest27624.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest27624.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest27624.so ztest27624.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest27624.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27624.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27624.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27624 ztest27624.c
Checking for strerror... Yes.

=== ztest27624.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27624.c
Checking for unistd.h... Yes.

=== ztest27624.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27624.c
Checking for stdarg.h... Yes.

=== ztest27624.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27624.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27624.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27624 ztest27624.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27624.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27624.c
Checking for return value of vsnprintf()... Yes.

=== ztest27624.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27624.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:27:01 CET 2014
Checking for gcc...
=== ztest29390.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest29390.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest29390.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest29390.c

Checking for shared library support...
=== ztest29390.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest29390.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest29390.so ztest29390.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest29390.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29390.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest29390.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29390 ztest29390.c
Checking for strerror... Yes.

=== ztest29390.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29390.c
Checking for unistd.h... Yes.

=== ztest29390.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29390.c
Checking for stdarg.h... Yes.

=== ztest29390.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29390.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest29390.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29390 ztest29390.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest29390.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29390.c
Checking for return value of vsnprintf()... Yes.

=== ztest29390.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29390.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:30:58 CET 2014
Checking for gcc...
=== ztest30521.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest30521.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest30521.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest30521.c

Checking for shared library support...
=== ztest30521.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest30521.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest30521.so ztest30521.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest30521.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30521.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest30521.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30521 ztest30521.c
Checking for strerror... Yes.

=== ztest30521.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30521.c
Checking for unistd.h... Yes.

=== ztest30521.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30521.c
Checking for stdarg.h... Yes.

=== ztest30521.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30521.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest30521.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30521 ztest30521.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest30521.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30521.c
Checking for return value of vsnprintf()... Yes.

=== ztest30521.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30521.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:31:09 CET 2014
Checking for gcc...
=== ztest30852.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest30852.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest30852.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest30852.c

Checking for shared library support...
=== ztest30852.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest30852.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest30852.so ztest30852.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest30852.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30852.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest30852.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30852 ztest30852.c
Checking for strerror... Yes.

=== ztest30852.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30852.c
Checking for unistd.h... Yes.

=== ztest30852.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30852.c
Checking for stdarg.h... Yes.

=== ztest30852.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30852.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest30852.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30852 ztest30852.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest30852.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30852.c
Checking for return value of vsnprintf()... Yes.

=== ztest30852.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30852.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:31:35 CET 2014
Checking for gcc...
=== ztest31011.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31011.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31011.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31011.c

Checking for shared library support...
=== ztest31011.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31011.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31011.so ztest31011.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest31011.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31011.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31011.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31011 ztest31011.c
Checking for strerror... Yes.

=== ztest31011.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31011.c
Checking for unistd.h... Yes.

=== ztest31011.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31011.c
Checking for stdarg.h... Yes.

=== ztest31011.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31011.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31011.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31011 ztest31011.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31011.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31011.c
Checking for return value of vsnprintf()... Yes.

=== ztest31011.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31011.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:31:45 CET 2014
Checking for gcc...
=== ztest31339.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31339.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31339.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31339.c

Checking for shared library support...
=== ztest31339.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31339.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31339.so ztest31339.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest31339.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31339.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31339.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31339 ztest31339.c
Checking for strerror... Yes.

=== ztest31339.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31339.c
Checking for unistd.h... Yes.

=== ztest31339.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31339.c
Checking for stdarg.h... Yes.

=== ztest31339.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31339.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31339.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31339 ztest31339.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31339.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31339.c
Checking for return value of vsnprintf()... Yes.

=== ztest31339.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31339.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:32:15 CET 2014
Checking for gcc...
=== ztest31490.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31490.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31490.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31490.c

Checking for shared library support...
=== ztest31490.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31490.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31490.so ztest31490.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest31490.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31490.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31490.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31490 ztest31490.c
Checking for strerror... Yes.

=== ztest31490.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31490.c
Checking for unistd.h... Yes.

=== ztest31490.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31490.c
Checking for stdarg.h... Yes.

=== ztest31490.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31490.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31490.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31490 ztest31490.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31490.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31490.c
Checking for return value of vsnprintf()... Yes.

=== ztest31490.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31490.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:32:32 CET 2014
Checking for gcc...
=== ztest31811.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31811.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31811.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31811.c

Checking for shared library support...
=== ztest31811.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31811.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31811.so ztest31811.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest31811.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31811.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31811.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31811 ztest31811.c
Checking for strerror... Yes.

=== ztest31811.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31811.c
Checking for unistd.h... Yes.

=== ztest31811.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31811.c
Checking for stdarg.h... Yes.

=== ztest31811.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31811.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31811.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31811 ztest31811.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31811.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31811.c
Checking for return value of vsnprintf()... Yes.

=== ztest31811.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31811.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:32:53 CET 2014
Checking for gcc...
=== ztest32147.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest32147.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest32147.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest32147.c

Checking for shared library support...
=== ztest32147.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest32147.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest32147.so ztest32147.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest32147.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32147.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest32147.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32147 ztest32147.c
Checking for strerror... Yes.

=== ztest32147.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32147.c
Checking for unistd.h... Yes.

=== ztest32147.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32147.c
Checking for stdarg.h... Yes.

=== ztest32147.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32147.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest32147.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32147 ztest32147.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest32147.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32147.c
Checking for return value of vsnprintf()... Yes.

=== ztest32147.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32147.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:34:02 CET 2014
Checking for gcc...
=== ztest32497.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest32497.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest32497.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest32497.c

Checking for shared library support...
=== ztest32497.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest32497.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest32497.so ztest32497.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest32497.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32497.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest32497.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32497 ztest32497.c
Checking for strerror... Yes.

=== ztest32497.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32497.c
Checking for unistd.h... Yes.

=== ztest32497.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32497.c
Checking for stdarg.h... Yes.

=== ztest32497.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32497.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest32497.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32497 ztest32497.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest32497.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32497.c
Checking for return value of vsnprintf()... Yes.

=== ztest32497.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32497.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:36:31 CET 2014
Checking for gcc...
=== ztest451.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest451.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest451.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest451.c

Checking for shared library support...
=== ztest451.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest451.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest451.so ztest451.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest451.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest451.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest451.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest451 ztest451.c
Checking for strerror... Yes.

=== ztest451.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest451.c
Checking for unistd.h... Yes.

=== ztest451.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest451.c
Checking for stdarg.h... Yes.

=== ztest451.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest451.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest451.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest451 ztest451.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest451.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest451.c
Checking for return value of vsnprintf()... Yes.

=== ztest451.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest451.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:37:31 CET 2014
Checking for gcc...
=== ztest844.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest844.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest844.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest844.c

Checking for shared library support...
=== ztest844.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest844.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest844.so ztest844.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest844.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest844.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest844.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest844 ztest844.c
Checking for strerror... Yes.

=== ztest844.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest844.c
Checking for unistd.h... Yes.

=== ztest844.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest844.c
Checking for stdarg.h... Yes.

=== ztest844.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest844.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest844.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest844 ztest844.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest844.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest844.c
Checking for return value of vsnprintf()... Yes.

=== ztest844.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest844.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:38:42 CET 2014
Checking for gcc...
=== ztest1193.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1193.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1193.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1193.c

Checking for shared library support...
=== ztest1193.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1193.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1193.so ztest1193.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest1193.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1193.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1193.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1193 ztest1193.c
Checking for strerror... Yes.

=== ztest1193.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1193.c
Checking for unistd.h... Yes.

=== ztest1193.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1193.c
Checking for stdarg.h... Yes.

=== ztest1193.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1193.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1193.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1193 ztest1193.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1193.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1193.c
Checking for return value of vsnprintf()... Yes.

=== ztest1193.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1193.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:39:12 CET 2014
Checking for gcc...
=== ztest1643.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1643.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1643.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1643.c

Checking for shared library support...
=== ztest1643.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1643.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1643.so ztest1643.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest1643.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1643.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1643.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1643 ztest1643.c
Checking for strerror... Yes.

=== ztest1643.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1643.c
Checking for unistd.h... Yes.

=== ztest1643.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1643.c
Checking for stdarg.h... Yes.

=== ztest1643.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1643.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1643.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1643 ztest1643.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1643.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1643.c
Checking for return value of vsnprintf()... Yes.

=== ztest1643.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1643.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:42:12 CET 2014
Checking for gcc...
=== ztest2160.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2160.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2160.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2160.c

Checking for shared library support...
=== ztest2160.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2160.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2160.so ztest2160.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest2160.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2160.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2160.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2160 ztest2160.c
Checking for strerror... Yes.

=== ztest2160.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2160.c
Checking for unistd.h... Yes.

=== ztest2160.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2160.c
Checking for stdarg.h... Yes.

=== ztest2160.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2160.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2160.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2160 ztest2160.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2160.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2160.c
Checking for return value of vsnprintf()... Yes.

=== ztest2160.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2160.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:49:18 CET 2014
Checking for gcc...
=== ztest2723.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2723.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2723.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2723.c

Checking for shared library support...
=== ztest2723.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2723.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2723.so ztest2723.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest2723.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2723.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2723.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2723 ztest2723.c
Checking for strerror... Yes.

=== ztest2723.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2723.c
Checking for unistd.h... Yes.

=== ztest2723.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2723.c
Checking for stdarg.h... Yes.

=== ztest2723.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2723.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2723.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2723 ztest2723.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2723.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2723.c
Checking for return value of vsnprintf()... Yes.

=== ztest2723.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2723.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:50:41 CET 2014
Checking for gcc...
=== ztest3083.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3083.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3083.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3083.c

Checking for shared library support...
=== ztest3083.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3083.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3083.so ztest3083.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest3083.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3083.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3083.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3083 ztest3083.c
Checking for strerror... Yes.

=== ztest3083.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3083.c
Checking for unistd.h... Yes.

=== ztest3083.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3083.c
Checking for stdarg.h... Yes.

=== ztest3083.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3083.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3083.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3083 ztest3083.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3083.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3083.c
Checking for return value of vsnprintf()... Yes.

=== ztest3083.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3083.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:54:19 CET 2014
Checking for gcc...
=== ztest3515.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3515.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3515.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3515.c

Checking for shared library support...
=== ztest3515.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3515.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3515.so ztest3515.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest3515.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3515.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3515.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3515 ztest3515.c
Checking for strerror... Yes.

=== ztest3515.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3515.c
Checking for unistd.h... Yes.

=== ztest3515.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3515.c
Checking for stdarg.h... Yes.

=== ztest3515.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3515.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3515.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3515 ztest3515.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3515.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3515.c
Checking for return value of vsnprintf()... Yes.

=== ztest3515.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3515.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 16:55:34 CET 2014
Checking for gcc...
=== ztest3857.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3857.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3857.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3857.c

Checking for shared library support...
=== ztest3857.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3857.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3857.so ztest3857.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest3857.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3857.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3857.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3857 ztest3857.c
Checking for strerror... Yes.

=== ztest3857.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3857.c
Checking for unistd.h... Yes.

=== ztest3857.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3857.c
Checking for stdarg.h... Yes.

=== ztest3857.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3857.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3857.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3857 ztest3857.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3857.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3857.c
Checking for return value of vsnprintf()... Yes.

=== ztest3857.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3857.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 17:08:27 CET 2014
Checking for gcc...
=== ztest4477.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4477.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4477.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4477.c

Checking for shared library support...
=== ztest4477.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4477.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4477.so ztest4477.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest4477.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4477.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4477.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4477 ztest4477.c
Checking for strerror... Yes.

=== ztest4477.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4477.c
Checking for unistd.h... Yes.

=== ztest4477.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4477.c
Checking for stdarg.h... Yes.

=== ztest4477.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4477.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4477.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4477 ztest4477.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4477.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4477.c
Checking for return value of vsnprintf()... Yes.

=== ztest4477.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4477.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 17:09:40 CET 2014
Checking for gcc...
=== ztest4813.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4813.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4813.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4813.c

Checking for shared library support...
=== ztest4813.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4813.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4813.so ztest4813.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest4813.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4813.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4813.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4813 ztest4813.c
Checking for strerror... Yes.

=== ztest4813.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4813.c
Checking for unistd.h... Yes.

=== ztest4813.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4813.c
Checking for stdarg.h... Yes.

=== ztest4813.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4813.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4813.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4813 ztest4813.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4813.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4813.c
Checking for return value of vsnprintf()... Yes.

=== ztest4813.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4813.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 17:10:36 CET 2014
Checking for gcc...
=== ztest5150.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5150.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5150.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5150.c

Checking for shared library support...
=== ztest5150.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5150.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5150.so ztest5150.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest5150.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5150.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5150.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5150 ztest5150.c
Checking for strerror... Yes.

=== ztest5150.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5150.c
Checking for unistd.h... Yes.

=== ztest5150.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5150.c
Checking for stdarg.h... Yes.

=== ztest5150.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5150.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5150.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5150 ztest5150.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5150.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5150.c
Checking for return value of vsnprintf()... Yes.

=== ztest5150.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5150.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 17:10:45 CET 2014
Checking for gcc...
=== ztest5310.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5310.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5310.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5310.c

Checking for shared library support...
=== ztest5310.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5310.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5310.so ztest5310.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest5310.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5310.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5310.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5310 ztest5310.c
Checking for strerror... Yes.

=== ztest5310.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5310.c
Checking for unistd.h... Yes.

=== ztest5310.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5310.c
Checking for stdarg.h... Yes.

=== ztest5310.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5310.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5310.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5310 ztest5310.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5310.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5310.c
Checking for return value of vsnprintf()... Yes.

=== ztest5310.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5310.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 17:20:07 CET 2014
Checking for gcc...
=== ztest5898.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5898.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5898.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5898.c

Checking for shared library support...
=== ztest5898.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5898.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5898.so ztest5898.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest5898.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5898.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5898.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5898 ztest5898.c
Checking for strerror... Yes.

=== ztest5898.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5898.c
Checking for unistd.h... Yes.

=== ztest5898.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5898.c
Checking for stdarg.h... Yes.

=== ztest5898.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5898.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5898.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5898 ztest5898.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5898.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5898.c
Checking for return value of vsnprintf()... Yes.

=== ztest5898.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5898.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 17:20:44 CET 2014
Checking for gcc...
=== ztest6231.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest6231.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6231.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest6231.c

Checking for shared library support...
=== ztest6231.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest6231.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6231.so ztest6231.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest6231.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6231.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6231.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6231 ztest6231.c
Checking for strerror... Yes.

=== ztest6231.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6231.c
Checking for unistd.h... Yes.

=== ztest6231.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6231.c
Checking for stdarg.h... Yes.

=== ztest6231.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6231.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6231.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6231 ztest6231.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6231.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6231.c
Checking for return value of vsnprintf()... Yes.

=== ztest6231.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6231.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 17:23:13 CET 2014
Checking for gcc...
=== ztest6624.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest6624.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6624.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest6624.c

Checking for shared library support...
=== ztest6624.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest6624.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6624.so ztest6624.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest6624.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6624.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6624.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6624 ztest6624.c
Checking for strerror... Yes.

=== ztest6624.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6624.c
Checking for unistd.h... Yes.

=== ztest6624.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6624.c
Checking for stdarg.h... Yes.

=== ztest6624.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6624.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6624.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6624 ztest6624.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6624.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6624.c
Checking for return value of vsnprintf()... Yes.

=== ztest6624.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6624.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 17:26:06 CET 2014
Checking for gcc...
=== ztest7074.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest7074.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7074.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest7074.c

Checking for shared library support...
=== ztest7074.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest7074.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7074.so ztest7074.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest7074.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7074.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7074.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7074 ztest7074.c
Checking for strerror... Yes.

=== ztest7074.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7074.c
Checking for unistd.h... Yes.

=== ztest7074.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7074.c
Checking for stdarg.h... Yes.

=== ztest7074.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7074.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7074.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7074 ztest7074.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7074.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7074.c
Checking for return value of vsnprintf()... Yes.

=== ztest7074.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7074.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 17:29:44 CET 2014
Checking for gcc...
=== ztest7471.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest7471.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7471.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest7471.c

Checking for shared library support...
=== ztest7471.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest7471.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7471.so ztest7471.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest7471.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7471.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7471.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7471 ztest7471.c
Checking for strerror... Yes.

=== ztest7471.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7471.c
Checking for unistd.h... Yes.

=== ztest7471.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7471.c
Checking for stdarg.h... Yes.

=== ztest7471.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7471.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7471.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7471 ztest7471.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7471.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7471.c
Checking for return value of vsnprintf()... Yes.

=== ztest7471.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7471.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 18:55:22 CET 2014
Checking for gcc...
=== ztest9526.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest9526.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9526.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest9526.c

Checking for shared library support...
=== ztest9526.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest9526.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9526.so ztest9526.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest9526.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9526.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9526.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9526 ztest9526.c
Checking for strerror... Yes.

=== ztest9526.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9526.c
Checking for unistd.h... Yes.

=== ztest9526.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9526.c
Checking for stdarg.h... Yes.

=== ztest9526.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9526.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9526.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9526 ztest9526.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9526.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9526.c
Checking for return value of vsnprintf()... Yes.

=== ztest9526.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9526.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:17:34 CET 2014
Checking for gcc...
=== ztest18744.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest18744.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest18744.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest18744.c

Checking for shared library support...
=== ztest18744.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest18744.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest18744.so ztest18744.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest18744.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18744.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest18744.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18744 ztest18744.c
Checking for strerror... Yes.

=== ztest18744.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18744.c
Checking for unistd.h... Yes.

=== ztest18744.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18744.c
Checking for stdarg.h... Yes.

=== ztest18744.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18744.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest18744.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18744 ztest18744.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest18744.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18744.c
Checking for return value of vsnprintf()... Yes.

=== ztest18744.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18744.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:31:26 CET 2014
Checking for gcc...
=== ztest19287.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest19287.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19287.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest19287.c

Checking for shared library support...
=== ztest19287.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest19287.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19287.so ztest19287.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest19287.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19287.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19287.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19287 ztest19287.c
Checking for strerror... Yes.

=== ztest19287.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19287.c
Checking for unistd.h... Yes.

=== ztest19287.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19287.c
Checking for stdarg.h... Yes.

=== ztest19287.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19287.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19287.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19287 ztest19287.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19287.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19287.c
Checking for return value of vsnprintf()... Yes.

=== ztest19287.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19287.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:40:12 CET 2014
Checking for gcc...
=== ztest19869.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest19869.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19869.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest19869.c

Checking for shared library support...
=== ztest19869.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest19869.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19869.so ztest19869.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest19869.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19869.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19869.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19869 ztest19869.c
Checking for strerror... Yes.

=== ztest19869.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19869.c
Checking for unistd.h... Yes.

=== ztest19869.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19869.c
Checking for stdarg.h... Yes.

=== ztest19869.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19869.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19869.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19869 ztest19869.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19869.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19869.c
Checking for return value of vsnprintf()... Yes.

=== ztest19869.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19869.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:41:49 CET 2014
Checking for gcc...
=== ztest20243.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest20243.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20243.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest20243.c

Checking for shared library support...
=== ztest20243.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest20243.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20243.so ztest20243.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest20243.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20243.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20243.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20243 ztest20243.c
Checking for strerror... Yes.

=== ztest20243.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20243.c
Checking for unistd.h... Yes.

=== ztest20243.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20243.c
Checking for stdarg.h... Yes.

=== ztest20243.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20243.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20243.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20243 ztest20243.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20243.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20243.c
Checking for return value of vsnprintf()... Yes.

=== ztest20243.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20243.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:44:48 CET 2014
Checking for gcc...
=== ztest20631.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest20631.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20631.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest20631.c

Checking for shared library support...
=== ztest20631.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest20631.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20631.so ztest20631.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest20631.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20631.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20631.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20631 ztest20631.c
Checking for strerror... Yes.

=== ztest20631.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20631.c
Checking for unistd.h... Yes.

=== ztest20631.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20631.c
Checking for stdarg.h... Yes.

=== ztest20631.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20631.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20631.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20631 ztest20631.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20631.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20631.c
Checking for return value of vsnprintf()... Yes.

=== ztest20631.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20631.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:46:58 CET 2014
Checking for gcc...
=== ztest21027.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21027.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21027.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21027.c

Checking for shared library support...
=== ztest21027.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21027.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21027.so ztest21027.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21027.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21027.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21027.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21027 ztest21027.c
Checking for strerror... Yes.

=== ztest21027.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21027.c
Checking for unistd.h... Yes.

=== ztest21027.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21027.c
Checking for stdarg.h... Yes.

=== ztest21027.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21027.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21027.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21027 ztest21027.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21027.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21027.c
Checking for return value of vsnprintf()... Yes.

=== ztest21027.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21027.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:48:45 CET 2014
Checking for gcc...
=== ztest21407.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21407.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21407.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21407.c

Checking for shared library support...
=== ztest21407.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21407.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21407.so ztest21407.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21407.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21407.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21407.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21407 ztest21407.c
Checking for strerror... Yes.

=== ztest21407.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21407.c
Checking for unistd.h... Yes.

=== ztest21407.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21407.c
Checking for stdarg.h... Yes.

=== ztest21407.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21407.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21407.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21407 ztest21407.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21407.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21407.c
Checking for return value of vsnprintf()... Yes.

=== ztest21407.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21407.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:49:30 CET 2014
Checking for gcc...
=== ztest21765.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21765.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21765.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21765.c

Checking for shared library support...
=== ztest21765.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21765.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21765.so ztest21765.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21765.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21765.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21765.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21765 ztest21765.c
Checking for strerror... Yes.

=== ztest21765.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21765.c
Checking for unistd.h... Yes.

=== ztest21765.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21765.c
Checking for stdarg.h... Yes.

=== ztest21765.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21765.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21765.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21765 ztest21765.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21765.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21765.c
Checking for return value of vsnprintf()... Yes.

=== ztest21765.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21765.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:50:56 CET 2014
Checking for gcc...
=== ztest22141.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22141.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22141.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22141.c

Checking for shared library support...
=== ztest22141.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22141.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22141.so ztest22141.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22141.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22141.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22141.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22141 ztest22141.c
Checking for strerror... Yes.

=== ztest22141.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22141.c
Checking for unistd.h... Yes.

=== ztest22141.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22141.c
Checking for stdarg.h... Yes.

=== ztest22141.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22141.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22141.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22141 ztest22141.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22141.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22141.c
Checking for return value of vsnprintf()... Yes.

=== ztest22141.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22141.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:51:40 CET 2014
Checking for gcc...
=== ztest22496.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22496.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22496.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22496.c

Checking for shared library support...
=== ztest22496.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22496.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22496.so ztest22496.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22496.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22496.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22496.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22496 ztest22496.c
Checking for strerror... Yes.

=== ztest22496.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22496.c
Checking for unistd.h... Yes.

=== ztest22496.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22496.c
Checking for stdarg.h... Yes.

=== ztest22496.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22496.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22496.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22496 ztest22496.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22496.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22496.c
Checking for return value of vsnprintf()... Yes.

=== ztest22496.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22496.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:52:47 CET 2014
Checking for gcc...
=== ztest22842.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22842.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22842.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22842.c

Checking for shared library support...
=== ztest22842.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22842.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22842.so ztest22842.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22842.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22842.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22842.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22842 ztest22842.c
Checking for strerror... Yes.

=== ztest22842.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22842.c
Checking for unistd.h... Yes.

=== ztest22842.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22842.c
Checking for stdarg.h... Yes.

=== ztest22842.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22842.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22842.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22842 ztest22842.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22842.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22842.c
Checking for return value of vsnprintf()... Yes.

=== ztest22842.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22842.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:53:17 CET 2014
Checking for gcc...
=== ztest23162.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest23162.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23162.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest23162.c

Checking for shared library support...
=== ztest23162.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest23162.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23162.so ztest23162.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest23162.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23162.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23162.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23162 ztest23162.c
Checking for strerror... Yes.

=== ztest23162.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23162.c
Checking for unistd.h... Yes.

=== ztest23162.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23162.c
Checking for stdarg.h... Yes.

=== ztest23162.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23162.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23162.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23162 ztest23162.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23162.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23162.c
Checking for return value of vsnprintf()... Yes.

=== ztest23162.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23162.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:54:07 CET 2014
Checking for gcc...
=== ztest23512.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest23512.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23512.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest23512.c

Checking for shared library support...
=== ztest23512.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest23512.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23512.so ztest23512.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest23512.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23512.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23512.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23512 ztest23512.c
Checking for strerror... Yes.

=== ztest23512.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23512.c
Checking for unistd.h... Yes.

=== ztest23512.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23512.c
Checking for stdarg.h... Yes.

=== ztest23512.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23512.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23512.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23512 ztest23512.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23512.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23512.c
Checking for return value of vsnprintf()... Yes.

=== ztest23512.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23512.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:55:17 CET 2014
Checking for gcc...
=== ztest23866.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest23866.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23866.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest23866.c

Checking for shared library support...
=== ztest23866.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest23866.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23866.so ztest23866.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest23866.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23866.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23866.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23866 ztest23866.c
Checking for strerror... Yes.

=== ztest23866.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23866.c
Checking for unistd.h... Yes.

=== ztest23866.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23866.c
Checking for stdarg.h... Yes.

=== ztest23866.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23866.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23866.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23866 ztest23866.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23866.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23866.c
Checking for return value of vsnprintf()... Yes.

=== ztest23866.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23866.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 21:56:43 CET 2014
Checking for gcc...
=== ztest24238.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest24238.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest24238.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest24238.c

Checking for shared library support...
=== ztest24238.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest24238.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest24238.so ztest24238.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest24238.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24238.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest24238.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24238 ztest24238.c
Checking for strerror... Yes.

=== ztest24238.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24238.c
Checking for unistd.h... Yes.

=== ztest24238.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24238.c
Checking for stdarg.h... Yes.

=== ztest24238.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24238.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest24238.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24238 ztest24238.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest24238.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24238.c
Checking for return value of vsnprintf()... Yes.

=== ztest24238.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24238.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:08:51 CET 2014
Checking for gcc...
=== ztest24828.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest24828.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest24828.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest24828.c

Checking for shared library support...
=== ztest24828.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest24828.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest24828.so ztest24828.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest24828.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24828.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest24828.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24828 ztest24828.c
Checking for strerror... Yes.

=== ztest24828.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24828.c
Checking for unistd.h... Yes.

=== ztest24828.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24828.c
Checking for stdarg.h... Yes.

=== ztest24828.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24828.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest24828.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24828 ztest24828.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest24828.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24828.c
Checking for return value of vsnprintf()... Yes.

=== ztest24828.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24828.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:09:51 CET 2014
Checking for gcc...
=== ztest25161.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest25161.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25161.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest25161.c

Checking for shared library support...
=== ztest25161.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest25161.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25161.so ztest25161.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest25161.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25161.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25161.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25161 ztest25161.c
Checking for strerror... Yes.

=== ztest25161.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25161.c
Checking for unistd.h... Yes.

=== ztest25161.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25161.c
Checking for stdarg.h... Yes.

=== ztest25161.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25161.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25161.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25161 ztest25161.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25161.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25161.c
Checking for return value of vsnprintf()... Yes.

=== ztest25161.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25161.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:11:07 CET 2014
Checking for gcc...
=== ztest25498.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest25498.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25498.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest25498.c

Checking for shared library support...
=== ztest25498.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest25498.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25498.so ztest25498.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest25498.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25498.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25498.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25498 ztest25498.c
Checking for strerror... Yes.

=== ztest25498.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25498.c
Checking for unistd.h... Yes.

=== ztest25498.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25498.c
Checking for stdarg.h... Yes.

=== ztest25498.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25498.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25498.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25498 ztest25498.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25498.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25498.c
Checking for return value of vsnprintf()... Yes.

=== ztest25498.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25498.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:14:01 CET 2014
Checking for gcc...
=== ztest26058.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest26058.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26058.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest26058.c

Checking for shared library support...
=== ztest26058.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest26058.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest26058.so ztest26058.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest26058.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26058.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26058.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26058 ztest26058.c
Checking for strerror... Yes.

=== ztest26058.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26058.c
Checking for unistd.h... Yes.

=== ztest26058.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26058.c
Checking for stdarg.h... Yes.

=== ztest26058.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26058.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26058.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26058 ztest26058.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26058.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26058.c
Checking for return value of vsnprintf()... Yes.

=== ztest26058.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26058.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:19:59 CET 2014
Checking for gcc...
=== ztest26604.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest26604.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26604.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest26604.c

Checking for shared library support...
=== ztest26604.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest26604.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest26604.so ztest26604.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest26604.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26604.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26604.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26604 ztest26604.c
Checking for strerror... Yes.

=== ztest26604.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26604.c
Checking for unistd.h... Yes.

=== ztest26604.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26604.c
Checking for stdarg.h... Yes.

=== ztest26604.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26604.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26604.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26604 ztest26604.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26604.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26604.c
Checking for return value of vsnprintf()... Yes.

=== ztest26604.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26604.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:25:04 CET 2014
Checking for gcc...
=== ztest27086.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest27086.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27086.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest27086.c

Checking for shared library support...
=== ztest27086.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest27086.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest27086.so ztest27086.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest27086.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27086.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27086.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27086 ztest27086.c
Checking for strerror... Yes.

=== ztest27086.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27086.c
Checking for unistd.h... Yes.

=== ztest27086.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27086.c
Checking for stdarg.h... Yes.

=== ztest27086.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27086.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27086.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27086 ztest27086.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27086.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27086.c
Checking for return value of vsnprintf()... Yes.

=== ztest27086.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27086.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:38:45 CET 2014
Checking for gcc...
=== ztest27984.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest27984.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27984.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest27984.c

Checking for shared library support...
=== ztest27984.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest27984.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest27984.so ztest27984.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest27984.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27984.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27984.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27984 ztest27984.c
Checking for strerror... Yes.

=== ztest27984.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27984.c
Checking for unistd.h... Yes.

=== ztest27984.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27984.c
Checking for stdarg.h... Yes.

=== ztest27984.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27984.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27984.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27984 ztest27984.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27984.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27984.c
Checking for return value of vsnprintf()... Yes.

=== ztest27984.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27984.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:42:14 CET 2014
Checking for gcc...
=== ztest28426.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest28426.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest28426.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest28426.c

Checking for shared library support...
=== ztest28426.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest28426.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest28426.so ztest28426.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest28426.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28426.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest28426.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28426 ztest28426.c
Checking for strerror... Yes.

=== ztest28426.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28426.c
Checking for unistd.h... Yes.

=== ztest28426.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28426.c
Checking for stdarg.h... Yes.

=== ztest28426.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28426.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest28426.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28426 ztest28426.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest28426.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28426.c
Checking for return value of vsnprintf()... Yes.

=== ztest28426.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28426.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:43:18 CET 2014
Checking for gcc...
=== ztest28946.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest28946.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest28946.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest28946.c

Checking for shared library support...
=== ztest28946.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest28946.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest28946.so ztest28946.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest28946.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28946.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest28946.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28946 ztest28946.c
Checking for strerror... Yes.

=== ztest28946.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28946.c
Checking for unistd.h... Yes.

=== ztest28946.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28946.c
Checking for stdarg.h... Yes.

=== ztest28946.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28946.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest28946.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28946 ztest28946.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest28946.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28946.c
Checking for return value of vsnprintf()... Yes.

=== ztest28946.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28946.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:46:35 CET 2014
Checking for gcc...
=== ztest29383.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest29383.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest29383.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest29383.c

Checking for shared library support...
=== ztest29383.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest29383.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest29383.so ztest29383.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest29383.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29383.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest29383.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29383 ztest29383.c
Checking for strerror... Yes.

=== ztest29383.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29383.c
Checking for unistd.h... Yes.

=== ztest29383.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29383.c
Checking for stdarg.h... Yes.

=== ztest29383.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29383.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest29383.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29383 ztest29383.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest29383.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29383.c
Checking for return value of vsnprintf()... Yes.

=== ztest29383.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29383.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:46:58 CET 2014
Checking for gcc...
=== ztest29719.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest29719.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest29719.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest29719.c

Checking for shared library support...
=== ztest29719.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest29719.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest29719.so ztest29719.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest29719.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29719.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest29719.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29719 ztest29719.c
Checking for strerror... Yes.

=== ztest29719.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29719.c
Checking for unistd.h... Yes.

=== ztest29719.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29719.c
Checking for stdarg.h... Yes.

=== ztest29719.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29719.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest29719.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29719 ztest29719.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest29719.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29719.c
Checking for return value of vsnprintf()... Yes.

=== ztest29719.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29719.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:49:05 CET 2014
Checking for gcc...
=== ztest30109.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest30109.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest30109.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest30109.c

Checking for shared library support...
=== ztest30109.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest30109.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest30109.so ztest30109.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest30109.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30109.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest30109.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30109 ztest30109.c
Checking for strerror... Yes.

=== ztest30109.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30109.c
Checking for unistd.h... Yes.

=== ztest30109.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30109.c
Checking for stdarg.h... Yes.

=== ztest30109.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30109.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest30109.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30109 ztest30109.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest30109.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30109.c
Checking for return value of vsnprintf()... Yes.

=== ztest30109.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30109.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:50:07 CET 2014
Checking for gcc...
=== ztest30466.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest30466.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest30466.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest30466.c

Checking for shared library support...
=== ztest30466.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest30466.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest30466.so ztest30466.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest30466.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30466.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest30466.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30466 ztest30466.c
Checking for strerror... Yes.

=== ztest30466.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30466.c
Checking for unistd.h... Yes.

=== ztest30466.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30466.c
Checking for stdarg.h... Yes.

=== ztest30466.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30466.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest30466.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30466 ztest30466.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest30466.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30466.c
Checking for return value of vsnprintf()... Yes.

=== ztest30466.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30466.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:51:24 CET 2014
Checking for gcc...
=== ztest30872.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest30872.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest30872.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest30872.c

Checking for shared library support...
=== ztest30872.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest30872.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest30872.so ztest30872.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest30872.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30872.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest30872.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30872 ztest30872.c
Checking for strerror... Yes.

=== ztest30872.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30872.c
Checking for unistd.h... Yes.

=== ztest30872.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30872.c
Checking for stdarg.h... Yes.

=== ztest30872.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30872.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest30872.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30872 ztest30872.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest30872.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30872.c
Checking for return value of vsnprintf()... Yes.

=== ztest30872.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30872.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:53:09 CET 2014
Checking for gcc...
=== ztest31229.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31229.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31229.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31229.c

Checking for shared library support...
=== ztest31229.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31229.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31229.so ztest31229.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest31229.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31229.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31229.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31229 ztest31229.c
Checking for strerror... Yes.

=== ztest31229.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31229.c
Checking for unistd.h... Yes.

=== ztest31229.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31229.c
Checking for stdarg.h... Yes.

=== ztest31229.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31229.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31229.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31229 ztest31229.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31229.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31229.c
Checking for return value of vsnprintf()... Yes.

=== ztest31229.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31229.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 22:53:50 CET 2014
Checking for gcc...
=== ztest31675.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31675.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31675.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31675.c

Checking for shared library support...
=== ztest31675.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31675.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31675.so ztest31675.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest31675.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31675.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31675.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31675 ztest31675.c
Checking for strerror... Yes.

=== ztest31675.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31675.c
Checking for unistd.h... Yes.

=== ztest31675.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31675.c
Checking for stdarg.h... Yes.

=== ztest31675.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31675.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31675.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31675 ztest31675.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31675.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31675.c
Checking for return value of vsnprintf()... Yes.

=== ztest31675.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31675.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:03:20 CET 2014
Checking for gcc...
=== ztest32198.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest32198.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest32198.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest32198.c

Checking for shared library support...
=== ztest32198.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest32198.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest32198.so ztest32198.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest32198.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32198.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest32198.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32198 ztest32198.c
Checking for strerror... Yes.

=== ztest32198.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32198.c
Checking for unistd.h... Yes.

=== ztest32198.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32198.c
Checking for stdarg.h... Yes.

=== ztest32198.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32198.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest32198.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32198 ztest32198.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest32198.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32198.c
Checking for return value of vsnprintf()... Yes.

=== ztest32198.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32198.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:04:35 CET 2014
Checking for gcc...
=== ztest32551.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest32551.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest32551.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest32551.c

Checking for shared library support...
=== ztest32551.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest32551.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest32551.so ztest32551.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest32551.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32551.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest32551.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32551 ztest32551.c
Checking for strerror... Yes.

=== ztest32551.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32551.c
Checking for unistd.h... Yes.

=== ztest32551.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32551.c
Checking for stdarg.h... Yes.

=== ztest32551.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32551.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest32551.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32551 ztest32551.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest32551.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32551.c
Checking for return value of vsnprintf()... Yes.

=== ztest32551.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32551.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:10:28 CET 2014
Checking for gcc...
=== ztest616.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest616.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest616.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest616.c

Checking for shared library support...
=== ztest616.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest616.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest616.so ztest616.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest616.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest616.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest616.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest616 ztest616.c
Checking for strerror... Yes.

=== ztest616.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest616.c
Checking for unistd.h... Yes.

=== ztest616.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest616.c
Checking for stdarg.h... Yes.

=== ztest616.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest616.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest616.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest616 ztest616.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest616.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest616.c
Checking for return value of vsnprintf()... Yes.

=== ztest616.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest616.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:11:50 CET 2014
Checking for gcc...
=== ztest1024.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1024.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1024.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1024.c

Checking for shared library support...
=== ztest1024.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1024.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1024.so ztest1024.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest1024.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1024.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1024.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1024 ztest1024.c
Checking for strerror... Yes.

=== ztest1024.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1024.c
Checking for unistd.h... Yes.

=== ztest1024.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1024.c
Checking for stdarg.h... Yes.

=== ztest1024.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1024.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1024.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1024 ztest1024.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1024.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1024.c
Checking for return value of vsnprintf()... Yes.

=== ztest1024.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1024.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:12:19 CET 2014
Checking for gcc...
=== ztest1393.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1393.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1393.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1393.c

Checking for shared library support...
=== ztest1393.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1393.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1393.so ztest1393.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest1393.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1393.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1393.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1393 ztest1393.c
Checking for strerror... Yes.

=== ztest1393.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1393.c
Checking for unistd.h... Yes.

=== ztest1393.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1393.c
Checking for stdarg.h... Yes.

=== ztest1393.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1393.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1393.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1393 ztest1393.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1393.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1393.c
Checking for return value of vsnprintf()... Yes.

=== ztest1393.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1393.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:14:34 CET 2014
Checking for gcc...
=== ztest1912.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1912.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1912.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1912.c

Checking for shared library support...
=== ztest1912.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1912.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1912.so ztest1912.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest1912.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1912.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1912.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1912 ztest1912.c
Checking for strerror... Yes.

=== ztest1912.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1912.c
Checking for unistd.h... Yes.

=== ztest1912.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1912.c
Checking for stdarg.h... Yes.

=== ztest1912.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1912.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1912.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1912 ztest1912.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1912.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1912.c
Checking for return value of vsnprintf()... Yes.

=== ztest1912.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1912.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:16:09 CET 2014
Checking for gcc...
=== ztest2335.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2335.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2335.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2335.c

Checking for shared library support...
=== ztest2335.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2335.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2335.so ztest2335.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest2335.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2335.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2335.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2335 ztest2335.c
Checking for strerror... Yes.

=== ztest2335.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2335.c
Checking for unistd.h... Yes.

=== ztest2335.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2335.c
Checking for stdarg.h... Yes.

=== ztest2335.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2335.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2335.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2335 ztest2335.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2335.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2335.c
Checking for return value of vsnprintf()... Yes.

=== ztest2335.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2335.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:20:05 CET 2014
Checking for gcc...
=== ztest2817.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2817.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2817.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2817.c

Checking for shared library support...
=== ztest2817.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2817.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2817.so ztest2817.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest2817.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2817.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2817.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2817 ztest2817.c
Checking for strerror... Yes.

=== ztest2817.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2817.c
Checking for unistd.h... Yes.

=== ztest2817.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2817.c
Checking for stdarg.h... Yes.

=== ztest2817.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2817.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2817.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2817 ztest2817.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2817.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2817.c
Checking for return value of vsnprintf()... Yes.

=== ztest2817.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2817.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:20:52 CET 2014
Checking for gcc...
=== ztest3181.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3181.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3181.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3181.c

Checking for shared library support...
=== ztest3181.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3181.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3181.so ztest3181.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest3181.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3181.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3181.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3181 ztest3181.c
Checking for strerror... Yes.

=== ztest3181.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3181.c
Checking for unistd.h... Yes.

=== ztest3181.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3181.c
Checking for stdarg.h... Yes.

=== ztest3181.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3181.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3181.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3181 ztest3181.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3181.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3181.c
Checking for return value of vsnprintf()... Yes.

=== ztest3181.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3181.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:21:16 CET 2014
Checking for gcc...
=== ztest3514.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3514.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3514.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3514.c

Checking for shared library support...
=== ztest3514.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3514.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3514.so ztest3514.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest3514.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3514.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3514.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3514 ztest3514.c
Checking for strerror... Yes.

=== ztest3514.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3514.c
Checking for unistd.h... Yes.

=== ztest3514.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3514.c
Checking for stdarg.h... Yes.

=== ztest3514.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3514.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3514.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3514 ztest3514.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3514.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3514.c
Checking for return value of vsnprintf()... Yes.

=== ztest3514.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3514.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:24:07 CET 2014
Checking for gcc...
=== ztest3777.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3777.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3777.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3777.c

Checking for shared library support...
=== ztest3777.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3777.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3777.so ztest3777.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest3777.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3777.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3777.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3777 ztest3777.c
Checking for strerror... Yes.

=== ztest3777.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3777.c
Checking for unistd.h... Yes.

=== ztest3777.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3777.c
Checking for stdarg.h... Yes.

=== ztest3777.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3777.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3777.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3777 ztest3777.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3777.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3777.c
Checking for return value of vsnprintf()... Yes.

=== ztest3777.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3777.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:30:17 CET 2014
Checking for gcc...
=== ztest4428.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4428.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4428.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4428.c

Checking for shared library support...
=== ztest4428.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4428.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4428.so ztest4428.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest4428.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4428.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4428.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4428 ztest4428.c
Checking for strerror... Yes.

=== ztest4428.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4428.c
Checking for unistd.h... Yes.

=== ztest4428.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4428.c
Checking for stdarg.h... Yes.

=== ztest4428.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4428.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4428.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4428 ztest4428.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4428.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4428.c
Checking for return value of vsnprintf()... Yes.

=== ztest4428.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4428.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:36:04 CET 2014
Checking for gcc...
=== ztest4909.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4909.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4909.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4909.c

Checking for shared library support...
=== ztest4909.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4909.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4909.so ztest4909.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest4909.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4909.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4909.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4909 ztest4909.c
Checking for strerror... Yes.

=== ztest4909.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4909.c
Checking for unistd.h... Yes.

=== ztest4909.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4909.c
Checking for stdarg.h... Yes.

=== ztest4909.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4909.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4909.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4909 ztest4909.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4909.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4909.c
Checking for return value of vsnprintf()... Yes.

=== ztest4909.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4909.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:37:04 CET 2014
Checking for gcc...
=== ztest5256.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5256.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5256.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5256.c

Checking for shared library support...
=== ztest5256.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5256.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5256.so ztest5256.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest5256.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5256.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5256.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5256 ztest5256.c
Checking for strerror... Yes.

=== ztest5256.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5256.c
Checking for unistd.h... Yes.

=== ztest5256.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5256.c
Checking for stdarg.h... Yes.

=== ztest5256.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5256.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5256.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5256 ztest5256.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5256.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5256.c
Checking for return value of vsnprintf()... Yes.

=== ztest5256.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5256.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:40:17 CET 2014
Checking for gcc...
=== ztest5663.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5663.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5663.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5663.c

Checking for shared library support...
=== ztest5663.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5663.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5663.so ztest5663.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest5663.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5663.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5663.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5663 ztest5663.c
Checking for strerror... Yes.

=== ztest5663.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5663.c
Checking for unistd.h... Yes.

=== ztest5663.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5663.c
Checking for stdarg.h... Yes.

=== ztest5663.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5663.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5663.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5663 ztest5663.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5663.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5663.c
Checking for return value of vsnprintf()... Yes.

=== ztest5663.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5663.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:40:42 CET 2014
Checking for gcc...
=== ztest5998.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5998.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5998.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5998.c

Checking for shared library support...
=== ztest5998.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5998.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5998.so ztest5998.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest5998.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5998.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5998.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5998 ztest5998.c
Checking for strerror... Yes.

=== ztest5998.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5998.c
Checking for unistd.h... Yes.

=== ztest5998.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5998.c
Checking for stdarg.h... Yes.

=== ztest5998.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5998.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5998.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5998 ztest5998.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5998.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5998.c
Checking for return value of vsnprintf()... Yes.

=== ztest5998.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5998.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Tue Oct 28 23:42:31 CET 2014
Checking for gcc...
=== ztest6366.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest6366.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6366.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest6366.c

Checking for shared library support...
=== ztest6366.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest6366.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6366.so ztest6366.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest6366.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6366.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6366.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6366 ztest6366.c
Checking for strerror... Yes.

=== ztest6366.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6366.c
Checking for unistd.h... Yes.

=== ztest6366.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6366.c
Checking for stdarg.h... Yes.

=== ztest6366.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6366.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6366.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6366 ztest6366.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6366.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6366.c
Checking for return value of vsnprintf()... Yes.

=== ztest6366.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6366.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 00:34:57 CET 2014
Checking for gcc...
=== ztest7826.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest7826.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7826.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest7826.c

Checking for shared library support...
=== ztest7826.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest7826.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7826.so ztest7826.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest7826.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7826.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7826.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7826 ztest7826.c
Checking for strerror... Yes.

=== ztest7826.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7826.c
Checking for unistd.h... Yes.

=== ztest7826.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7826.c
Checking for stdarg.h... Yes.

=== ztest7826.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7826.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7826.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7826 ztest7826.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7826.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7826.c
Checking for return value of vsnprintf()... Yes.

=== ztest7826.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7826.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 00:35:32 CET 2014
Checking for gcc...
=== ztest8155.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest8155.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8155.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest8155.c

Checking for shared library support...
=== ztest8155.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest8155.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8155.so ztest8155.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest8155.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8155.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8155.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8155 ztest8155.c
Checking for strerror... Yes.

=== ztest8155.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8155.c
Checking for unistd.h... Yes.

=== ztest8155.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8155.c
Checking for stdarg.h... Yes.

=== ztest8155.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8155.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8155.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8155 ztest8155.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8155.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8155.c
Checking for return value of vsnprintf()... Yes.

=== ztest8155.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8155.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 00:36:10 CET 2014
Checking for gcc...
=== ztest8515.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest8515.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8515.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest8515.c

Checking for shared library support...
=== ztest8515.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest8515.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8515.so ztest8515.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest8515.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8515.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8515.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8515 ztest8515.c
Checking for strerror... Yes.

=== ztest8515.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8515.c
Checking for unistd.h... Yes.

=== ztest8515.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8515.c
Checking for stdarg.h... Yes.

=== ztest8515.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8515.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8515.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8515 ztest8515.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8515.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8515.c
Checking for return value of vsnprintf()... Yes.

=== ztest8515.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8515.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 00:37:24 CET 2014
Checking for gcc...
=== ztest8867.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest8867.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8867.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest8867.c

Checking for shared library support...
=== ztest8867.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest8867.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8867.so ztest8867.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest8867.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8867.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8867.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8867 ztest8867.c
Checking for strerror... Yes.

=== ztest8867.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8867.c
Checking for unistd.h... Yes.

=== ztest8867.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8867.c
Checking for stdarg.h... Yes.

=== ztest8867.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8867.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8867.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8867 ztest8867.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8867.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8867.c
Checking for return value of vsnprintf()... Yes.

=== ztest8867.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8867.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 00:39:27 CET 2014
Checking for gcc...
=== ztest9231.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest9231.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9231.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest9231.c

Checking for shared library support...
=== ztest9231.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest9231.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9231.so ztest9231.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest9231.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9231.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9231.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9231 ztest9231.c
Checking for strerror... Yes.

=== ztest9231.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9231.c
Checking for unistd.h... Yes.

=== ztest9231.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9231.c
Checking for stdarg.h... Yes.

=== ztest9231.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9231.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9231.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9231 ztest9231.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9231.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9231.c
Checking for return value of vsnprintf()... Yes.

=== ztest9231.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9231.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 00:40:36 CET 2014
Checking for gcc...
=== ztest9644.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest9644.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9644.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest9644.c

Checking for shared library support...
=== ztest9644.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest9644.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9644.so ztest9644.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest9644.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9644.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9644.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9644 ztest9644.c
Checking for strerror... Yes.

=== ztest9644.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9644.c
Checking for unistd.h... Yes.

=== ztest9644.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9644.c
Checking for stdarg.h... Yes.

=== ztest9644.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9644.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9644.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9644 ztest9644.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9644.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9644.c
Checking for return value of vsnprintf()... Yes.

=== ztest9644.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9644.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 00:50:36 CET 2014
Checking for gcc...
=== ztest10185.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest10185.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10185.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest10185.c

Checking for shared library support...
=== ztest10185.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest10185.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10185.so ztest10185.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest10185.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10185.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10185.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10185 ztest10185.c
Checking for strerror... Yes.

=== ztest10185.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10185.c
Checking for unistd.h... Yes.

=== ztest10185.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10185.c
Checking for stdarg.h... Yes.

=== ztest10185.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10185.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10185.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10185 ztest10185.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10185.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10185.c
Checking for return value of vsnprintf()... Yes.

=== ztest10185.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10185.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:01:45 CET 2014
Checking for gcc...
=== ztest10672.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest10672.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10672.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest10672.c

Checking for shared library support...
=== ztest10672.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest10672.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10672.so ztest10672.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest10672.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10672.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10672.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10672 ztest10672.c
Checking for strerror... Yes.

=== ztest10672.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10672.c
Checking for unistd.h... Yes.

=== ztest10672.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10672.c
Checking for stdarg.h... Yes.

=== ztest10672.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10672.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10672.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10672 ztest10672.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10672.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10672.c
Checking for return value of vsnprintf()... Yes.

=== ztest10672.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10672.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:04:08 CET 2014
Checking for gcc...
=== ztest11027.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest11027.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11027.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest11027.c

Checking for shared library support...
=== ztest11027.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest11027.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11027.so ztest11027.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest11027.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11027.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11027.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11027 ztest11027.c
Checking for strerror... Yes.

=== ztest11027.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11027.c
Checking for unistd.h... Yes.

=== ztest11027.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11027.c
Checking for stdarg.h... Yes.

=== ztest11027.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11027.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11027.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11027 ztest11027.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11027.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11027.c
Checking for return value of vsnprintf()... Yes.

=== ztest11027.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11027.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:06:03 CET 2014
Checking for gcc...
=== ztest11387.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest11387.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11387.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest11387.c

Checking for shared library support...
=== ztest11387.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest11387.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11387.so ztest11387.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest11387.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11387.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11387.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11387 ztest11387.c
Checking for strerror... Yes.

=== ztest11387.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11387.c
Checking for unistd.h... Yes.

=== ztest11387.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11387.c
Checking for stdarg.h... Yes.

=== ztest11387.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11387.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11387.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11387 ztest11387.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11387.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11387.c
Checking for return value of vsnprintf()... Yes.

=== ztest11387.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11387.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:06:49 CET 2014
Checking for gcc...
=== ztest11718.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest11718.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11718.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest11718.c

Checking for shared library support...
=== ztest11718.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest11718.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11718.so ztest11718.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest11718.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11718.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11718.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11718 ztest11718.c
Checking for strerror... Yes.

=== ztest11718.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11718.c
Checking for unistd.h... Yes.

=== ztest11718.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11718.c
Checking for stdarg.h... Yes.

=== ztest11718.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11718.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11718.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11718 ztest11718.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11718.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11718.c
Checking for return value of vsnprintf()... Yes.

=== ztest11718.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11718.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:08:58 CET 2014
Checking for gcc...
=== ztest12064.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest12064.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest12064.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest12064.c

Checking for shared library support...
=== ztest12064.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest12064.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest12064.so ztest12064.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest12064.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12064.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest12064.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12064 ztest12064.c
Checking for strerror... Yes.

=== ztest12064.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12064.c
Checking for unistd.h... Yes.

=== ztest12064.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12064.c
Checking for stdarg.h... Yes.

=== ztest12064.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12064.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest12064.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12064 ztest12064.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest12064.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12064.c
Checking for return value of vsnprintf()... Yes.

=== ztest12064.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12064.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:24:08 CET 2014
Checking for gcc...
=== ztest12695.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest12695.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest12695.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest12695.c

Checking for shared library support...
=== ztest12695.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest12695.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest12695.so ztest12695.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest12695.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12695.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest12695.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12695 ztest12695.c
Checking for strerror... Yes.

=== ztest12695.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12695.c
Checking for unistd.h... Yes.

=== ztest12695.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12695.c
Checking for stdarg.h... Yes.

=== ztest12695.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12695.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest12695.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12695 ztest12695.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest12695.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12695.c
Checking for return value of vsnprintf()... Yes.

=== ztest12695.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12695.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:25:52 CET 2014
Checking for gcc...
=== ztest13068.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest13068.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13068.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest13068.c

Checking for shared library support...
=== ztest13068.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest13068.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest13068.so ztest13068.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest13068.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13068.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13068.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13068 ztest13068.c
Checking for strerror... Yes.

=== ztest13068.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13068.c
Checking for unistd.h... Yes.

=== ztest13068.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13068.c
Checking for stdarg.h... Yes.

=== ztest13068.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13068.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13068.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13068 ztest13068.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13068.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13068.c
Checking for return value of vsnprintf()... Yes.

=== ztest13068.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13068.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:27:16 CET 2014
Checking for gcc...
=== ztest13430.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest13430.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13430.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest13430.c

Checking for shared library support...
=== ztest13430.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest13430.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest13430.so ztest13430.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest13430.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13430.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13430.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13430 ztest13430.c
Checking for strerror... Yes.

=== ztest13430.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13430.c
Checking for unistd.h... Yes.

=== ztest13430.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13430.c
Checking for stdarg.h... Yes.

=== ztest13430.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13430.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13430.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13430 ztest13430.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13430.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13430.c
Checking for return value of vsnprintf()... Yes.

=== ztest13430.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13430.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:28:28 CET 2014
Checking for gcc...
=== ztest13824.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest13824.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13824.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest13824.c

Checking for shared library support...
=== ztest13824.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest13824.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest13824.so ztest13824.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest13824.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13824.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13824.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13824 ztest13824.c
Checking for strerror... Yes.

=== ztest13824.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13824.c
Checking for unistd.h... Yes.

=== ztest13824.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13824.c
Checking for stdarg.h... Yes.

=== ztest13824.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13824.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13824.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13824 ztest13824.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13824.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13824.c
Checking for return value of vsnprintf()... Yes.

=== ztest13824.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13824.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:31:29 CET 2014
Checking for gcc...
=== ztest14217.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest14217.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest14217.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest14217.c

Checking for shared library support...
=== ztest14217.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest14217.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest14217.so ztest14217.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest14217.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14217.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest14217.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14217 ztest14217.c
Checking for strerror... Yes.

=== ztest14217.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14217.c
Checking for unistd.h... Yes.

=== ztest14217.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14217.c
Checking for stdarg.h... Yes.

=== ztest14217.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14217.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest14217.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14217 ztest14217.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest14217.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14217.c
Checking for return value of vsnprintf()... Yes.

=== ztest14217.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14217.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:36:58 CET 2014
Checking for gcc...
=== ztest14627.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest14627.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest14627.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest14627.c

Checking for shared library support...
=== ztest14627.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest14627.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest14627.so ztest14627.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest14627.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14627.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest14627.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14627 ztest14627.c
Checking for strerror... Yes.

=== ztest14627.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14627.c
Checking for unistd.h... Yes.

=== ztest14627.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14627.c
Checking for stdarg.h... Yes.

=== ztest14627.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14627.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest14627.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14627 ztest14627.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest14627.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14627.c
Checking for return value of vsnprintf()... Yes.

=== ztest14627.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14627.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:37:43 CET 2014
Checking for gcc...
=== ztest14966.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest14966.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest14966.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest14966.c

Checking for shared library support...
=== ztest14966.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest14966.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest14966.so ztest14966.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest14966.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14966.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest14966.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14966 ztest14966.c
Checking for strerror... Yes.

=== ztest14966.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14966.c
Checking for unistd.h... Yes.

=== ztest14966.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14966.c
Checking for stdarg.h... Yes.

=== ztest14966.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14966.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest14966.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14966 ztest14966.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest14966.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14966.c
Checking for return value of vsnprintf()... Yes.

=== ztest14966.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14966.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:41:28 CET 2014
Checking for gcc...
=== ztest15442.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest15442.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest15442.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest15442.c

Checking for shared library support...
=== ztest15442.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest15442.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest15442.so ztest15442.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest15442.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15442.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest15442.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15442 ztest15442.c
Checking for strerror... Yes.

=== ztest15442.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15442.c
Checking for unistd.h... Yes.

=== ztest15442.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15442.c
Checking for stdarg.h... Yes.

=== ztest15442.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15442.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest15442.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15442 ztest15442.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest15442.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15442.c
Checking for return value of vsnprintf()... Yes.

=== ztest15442.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15442.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:44:09 CET 2014
Checking for gcc...
=== ztest16102.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest16102.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest16102.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest16102.c

Checking for shared library support...
=== ztest16102.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest16102.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest16102.so ztest16102.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest16102.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16102.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest16102.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16102 ztest16102.c
Checking for strerror... Yes.

=== ztest16102.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16102.c
Checking for unistd.h... Yes.

=== ztest16102.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16102.c
Checking for stdarg.h... Yes.

=== ztest16102.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16102.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest16102.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16102 ztest16102.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest16102.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16102.c
Checking for return value of vsnprintf()... Yes.

=== ztest16102.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16102.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:45:52 CET 2014
Checking for gcc...
=== ztest16649.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest16649.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest16649.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest16649.c

Checking for shared library support...
=== ztest16649.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest16649.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest16649.so ztest16649.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest16649.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16649.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest16649.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16649 ztest16649.c
Checking for strerror... Yes.

=== ztest16649.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16649.c
Checking for unistd.h... Yes.

=== ztest16649.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16649.c
Checking for stdarg.h... Yes.

=== ztest16649.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16649.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest16649.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16649 ztest16649.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest16649.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16649.c
Checking for return value of vsnprintf()... Yes.

=== ztest16649.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16649.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:51:29 CET 2014
Checking for gcc...
=== ztest17231.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest17231.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest17231.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest17231.c

Checking for shared library support...
=== ztest17231.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest17231.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest17231.so ztest17231.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest17231.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17231.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest17231.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17231 ztest17231.c
Checking for strerror... Yes.

=== ztest17231.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17231.c
Checking for unistd.h... Yes.

=== ztest17231.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17231.c
Checking for stdarg.h... Yes.

=== ztest17231.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17231.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest17231.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17231 ztest17231.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest17231.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17231.c
Checking for return value of vsnprintf()... Yes.

=== ztest17231.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17231.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:52:12 CET 2014
Checking for gcc...
=== ztest17614.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest17614.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest17614.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest17614.c

Checking for shared library support...
=== ztest17614.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest17614.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest17614.so ztest17614.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest17614.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17614.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest17614.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17614 ztest17614.c
Checking for strerror... Yes.

=== ztest17614.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17614.c
Checking for unistd.h... Yes.

=== ztest17614.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17614.c
Checking for stdarg.h... Yes.

=== ztest17614.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17614.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest17614.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17614 ztest17614.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest17614.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17614.c
Checking for return value of vsnprintf()... Yes.

=== ztest17614.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17614.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:53:20 CET 2014
Checking for gcc...
=== ztest17969.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest17969.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest17969.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest17969.c

Checking for shared library support...
=== ztest17969.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest17969.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest17969.so ztest17969.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest17969.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17969.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest17969.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17969 ztest17969.c
Checking for strerror... Yes.

=== ztest17969.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17969.c
Checking for unistd.h... Yes.

=== ztest17969.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17969.c
Checking for stdarg.h... Yes.

=== ztest17969.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17969.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest17969.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17969 ztest17969.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest17969.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17969.c
Checking for return value of vsnprintf()... Yes.

=== ztest17969.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17969.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 01:55:32 CET 2014
Checking for gcc...
=== ztest18368.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest18368.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest18368.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest18368.c

Checking for shared library support...
=== ztest18368.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest18368.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest18368.so ztest18368.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest18368.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18368.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest18368.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18368 ztest18368.c
Checking for strerror... Yes.

=== ztest18368.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18368.c
Checking for unistd.h... Yes.

=== ztest18368.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18368.c
Checking for stdarg.h... Yes.

=== ztest18368.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18368.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest18368.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18368 ztest18368.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest18368.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18368.c
Checking for return value of vsnprintf()... Yes.

=== ztest18368.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18368.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 02:59:42 CET 2014
Checking for gcc...
=== ztest19505.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest19505.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19505.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest19505.c

Checking for shared library support...
=== ztest19505.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest19505.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19505.so ztest19505.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest19505.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19505.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19505.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19505 ztest19505.c
Checking for strerror... Yes.

=== ztest19505.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19505.c
Checking for unistd.h... Yes.

=== ztest19505.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19505.c
Checking for stdarg.h... Yes.

=== ztest19505.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19505.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19505.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19505 ztest19505.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19505.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19505.c
Checking for return value of vsnprintf()... Yes.

=== ztest19505.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19505.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 03:00:27 CET 2014
Checking for gcc...
=== ztest19898.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest19898.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19898.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest19898.c

Checking for shared library support...
=== ztest19898.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest19898.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19898.so ztest19898.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest19898.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19898.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19898.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19898 ztest19898.c
Checking for strerror... Yes.

=== ztest19898.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19898.c
Checking for unistd.h... Yes.

=== ztest19898.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19898.c
Checking for stdarg.h... Yes.

=== ztest19898.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19898.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19898.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19898 ztest19898.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19898.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19898.c
Checking for return value of vsnprintf()... Yes.

=== ztest19898.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19898.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 03:01:29 CET 2014
Checking for gcc...
=== ztest20249.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest20249.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20249.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest20249.c

Checking for shared library support...
=== ztest20249.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest20249.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20249.so ztest20249.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest20249.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20249.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20249.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20249 ztest20249.c
Checking for strerror... Yes.

=== ztest20249.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20249.c
Checking for unistd.h... Yes.

=== ztest20249.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20249.c
Checking for stdarg.h... Yes.

=== ztest20249.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20249.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20249.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20249 ztest20249.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20249.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20249.c
Checking for return value of vsnprintf()... Yes.

=== ztest20249.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20249.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 03:04:35 CET 2014
Checking for gcc...
=== ztest20632.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest20632.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20632.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest20632.c

Checking for shared library support...
=== ztest20632.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest20632.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20632.so ztest20632.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest20632.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20632.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20632.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20632 ztest20632.c
Checking for strerror... Yes.

=== ztest20632.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20632.c
Checking for unistd.h... Yes.

=== ztest20632.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20632.c
Checking for stdarg.h... Yes.

=== ztest20632.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20632.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20632.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20632 ztest20632.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20632.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20632.c
Checking for return value of vsnprintf()... Yes.

=== ztest20632.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20632.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 03:06:20 CET 2014
Checking for gcc...
=== ztest21034.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21034.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21034.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21034.c

Checking for shared library support...
=== ztest21034.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21034.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21034.so ztest21034.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21034.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21034.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21034.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21034 ztest21034.c
Checking for strerror... Yes.

=== ztest21034.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21034.c
Checking for unistd.h... Yes.

=== ztest21034.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21034.c
Checking for stdarg.h... Yes.

=== ztest21034.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21034.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21034.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21034 ztest21034.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21034.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21034.c
Checking for return value of vsnprintf()... Yes.

=== ztest21034.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21034.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 03:09:24 CET 2014
Checking for gcc...
=== ztest21497.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21497.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21497.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21497.c

Checking for shared library support...
=== ztest21497.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21497.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21497.so ztest21497.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21497.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21497.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21497.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21497 ztest21497.c
Checking for strerror... Yes.

=== ztest21497.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21497.c
Checking for unistd.h... Yes.

=== ztest21497.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21497.c
Checking for stdarg.h... Yes.

=== ztest21497.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21497.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21497.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21497 ztest21497.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21497.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21497.c
Checking for return value of vsnprintf()... Yes.

=== ztest21497.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21497.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 03:12:36 CET 2014
Checking for gcc...
=== ztest21863.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest21863.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21863.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest21863.c

Checking for shared library support...
=== ztest21863.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest21863.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21863.so ztest21863.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest21863.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21863.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21863.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21863 ztest21863.c
Checking for strerror... Yes.

=== ztest21863.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21863.c
Checking for unistd.h... Yes.

=== ztest21863.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21863.c
Checking for stdarg.h... Yes.

=== ztest21863.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21863.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21863.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21863 ztest21863.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21863.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21863.c
Checking for return value of vsnprintf()... Yes.

=== ztest21863.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21863.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 03:15:58 CET 2014
Checking for gcc...
=== ztest22282.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22282.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22282.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22282.c

Checking for shared library support...
=== ztest22282.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22282.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22282.so ztest22282.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22282.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22282.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22282.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22282 ztest22282.c
Checking for strerror... Yes.

=== ztest22282.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22282.c
Checking for unistd.h... Yes.

=== ztest22282.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22282.c
Checking for stdarg.h... Yes.

=== ztest22282.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22282.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22282.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22282 ztest22282.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22282.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22282.c
Checking for return value of vsnprintf()... Yes.

=== ztest22282.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22282.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 03:16:53 CET 2014
Checking for gcc...
=== ztest22630.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest22630.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22630.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest22630.c

Checking for shared library support...
=== ztest22630.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest22630.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22630.so ztest22630.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest22630.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22630.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22630.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22630 ztest22630.c
Checking for strerror... Yes.

=== ztest22630.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22630.c
Checking for unistd.h... Yes.

=== ztest22630.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22630.c
Checking for stdarg.h... Yes.

=== ztest22630.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22630.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22630.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22630 ztest22630.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22630.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22630.c
Checking for return value of vsnprintf()... Yes.

=== ztest22630.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22630.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 03:26:52 CET 2014
Checking for gcc...
=== ztest23342.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest23342.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23342.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest23342.c

Checking for shared library support...
=== ztest23342.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest23342.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23342.so ztest23342.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest23342.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23342.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23342.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23342 ztest23342.c
Checking for strerror... Yes.

=== ztest23342.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23342.c
Checking for unistd.h... Yes.

=== ztest23342.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23342.c
Checking for stdarg.h... Yes.

=== ztest23342.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23342.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23342.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23342 ztest23342.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23342.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23342.c
Checking for return value of vsnprintf()... Yes.

=== ztest23342.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23342.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 03:36:05 CET 2014
Checking for gcc...
=== ztest24183.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest24183.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest24183.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest24183.c

Checking for shared library support...
=== ztest24183.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest24183.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest24183.so ztest24183.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest24183.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24183.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest24183.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24183 ztest24183.c
Checking for strerror... Yes.

=== ztest24183.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24183.c
Checking for unistd.h... Yes.

=== ztest24183.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24183.c
Checking for stdarg.h... Yes.

=== ztest24183.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24183.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest24183.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24183 ztest24183.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest24183.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24183.c
Checking for return value of vsnprintf()... Yes.

=== ztest24183.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24183.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:27:56 CET 2014
Checking for gcc...
=== ztest25434.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest25434.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25434.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest25434.c

Checking for shared library support...
=== ztest25434.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest25434.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25434.so ztest25434.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest25434.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25434.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25434.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25434 ztest25434.c
Checking for strerror... Yes.

=== ztest25434.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25434.c
Checking for unistd.h... Yes.

=== ztest25434.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25434.c
Checking for stdarg.h... Yes.

=== ztest25434.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25434.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25434.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25434 ztest25434.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25434.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25434.c
Checking for return value of vsnprintf()... Yes.

=== ztest25434.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25434.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:28:19 CET 2014
Checking for gcc...
=== ztest25772.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest25772.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25772.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest25772.c

Checking for shared library support...
=== ztest25772.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest25772.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25772.so ztest25772.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest25772.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25772.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25772.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25772 ztest25772.c
Checking for strerror... Yes.

=== ztest25772.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25772.c
Checking for unistd.h... Yes.

=== ztest25772.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25772.c
Checking for stdarg.h... Yes.

=== ztest25772.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25772.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25772.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25772 ztest25772.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25772.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25772.c
Checking for return value of vsnprintf()... Yes.

=== ztest25772.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25772.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:30:17 CET 2014
Checking for gcc...
=== ztest26221.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest26221.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26221.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest26221.c

Checking for shared library support...
=== ztest26221.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest26221.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest26221.so ztest26221.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest26221.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26221.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26221.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26221 ztest26221.c
Checking for strerror... Yes.

=== ztest26221.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26221.c
Checking for unistd.h... Yes.

=== ztest26221.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26221.c
Checking for stdarg.h... Yes.

=== ztest26221.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26221.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26221.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26221 ztest26221.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26221.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26221.c
Checking for return value of vsnprintf()... Yes.

=== ztest26221.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26221.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:33:31 CET 2014
Checking for gcc...
=== ztest26607.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest26607.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26607.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest26607.c

Checking for shared library support...
=== ztest26607.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest26607.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest26607.so ztest26607.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest26607.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26607.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26607.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26607 ztest26607.c
Checking for strerror... Yes.

=== ztest26607.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26607.c
Checking for unistd.h... Yes.

=== ztest26607.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26607.c
Checking for stdarg.h... Yes.

=== ztest26607.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26607.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26607.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26607 ztest26607.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26607.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26607.c
Checking for return value of vsnprintf()... Yes.

=== ztest26607.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26607.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:34:30 CET 2014
Checking for gcc...
=== ztest26941.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest26941.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26941.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest26941.c

Checking for shared library support...
=== ztest26941.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest26941.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest26941.so ztest26941.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest26941.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26941.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26941.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26941 ztest26941.c
Checking for strerror... Yes.

=== ztest26941.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26941.c
Checking for unistd.h... Yes.

=== ztest26941.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26941.c
Checking for stdarg.h... Yes.

=== ztest26941.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26941.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26941.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26941 ztest26941.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26941.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26941.c
Checking for return value of vsnprintf()... Yes.

=== ztest26941.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26941.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:34:48 CET 2014
Checking for gcc...
=== ztest27266.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest27266.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27266.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest27266.c

Checking for shared library support...
=== ztest27266.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest27266.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest27266.so ztest27266.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest27266.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27266.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27266.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27266 ztest27266.c
Checking for strerror... Yes.

=== ztest27266.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27266.c
Checking for unistd.h... Yes.

=== ztest27266.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27266.c
Checking for stdarg.h... Yes.

=== ztest27266.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27266.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27266.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27266 ztest27266.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27266.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27266.c
Checking for return value of vsnprintf()... Yes.

=== ztest27266.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27266.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:35:18 CET 2014
Checking for gcc...
=== ztest27591.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest27591.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27591.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest27591.c

Checking for shared library support...
=== ztest27591.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest27591.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest27591.so ztest27591.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest27591.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27591.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27591.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27591 ztest27591.c
Checking for strerror... Yes.

=== ztest27591.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27591.c
Checking for unistd.h... Yes.

=== ztest27591.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27591.c
Checking for stdarg.h... Yes.

=== ztest27591.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27591.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27591.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27591 ztest27591.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27591.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27591.c
Checking for return value of vsnprintf()... Yes.

=== ztest27591.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27591.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:35:41 CET 2014
Checking for gcc...
=== ztest27918.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest27918.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27918.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest27918.c

Checking for shared library support...
=== ztest27918.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest27918.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest27918.so ztest27918.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest27918.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27918.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27918.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27918 ztest27918.c
Checking for strerror... Yes.

=== ztest27918.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27918.c
Checking for unistd.h... Yes.

=== ztest27918.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27918.c
Checking for stdarg.h... Yes.

=== ztest27918.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27918.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27918.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27918 ztest27918.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27918.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27918.c
Checking for return value of vsnprintf()... Yes.

=== ztest27918.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27918.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:38:03 CET 2014
Checking for gcc...
=== ztest28277.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest28277.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest28277.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest28277.c

Checking for shared library support...
=== ztest28277.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest28277.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest28277.so ztest28277.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest28277.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28277.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest28277.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28277 ztest28277.c
Checking for strerror... Yes.

=== ztest28277.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28277.c
Checking for unistd.h... Yes.

=== ztest28277.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28277.c
Checking for stdarg.h... Yes.

=== ztest28277.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28277.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest28277.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28277 ztest28277.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest28277.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28277.c
Checking for return value of vsnprintf()... Yes.

=== ztest28277.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28277.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:38:33 CET 2014
Checking for gcc...
=== ztest28603.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest28603.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest28603.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest28603.c

Checking for shared library support...
=== ztest28603.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest28603.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest28603.so ztest28603.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest28603.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28603.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest28603.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28603 ztest28603.c
Checking for strerror... Yes.

=== ztest28603.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28603.c
Checking for unistd.h... Yes.

=== ztest28603.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28603.c
Checking for stdarg.h... Yes.

=== ztest28603.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28603.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest28603.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28603 ztest28603.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest28603.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28603.c
Checking for return value of vsnprintf()... Yes.

=== ztest28603.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28603.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:47:44 CET 2014
Checking for gcc...
=== ztest29103.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest29103.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest29103.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest29103.c

Checking for shared library support...
=== ztest29103.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest29103.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest29103.so ztest29103.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest29103.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29103.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest29103.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29103 ztest29103.c
Checking for strerror... Yes.

=== ztest29103.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29103.c
Checking for unistd.h... Yes.

=== ztest29103.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29103.c
Checking for stdarg.h... Yes.

=== ztest29103.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29103.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest29103.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29103 ztest29103.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest29103.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29103.c
Checking for return value of vsnprintf()... Yes.

=== ztest29103.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29103.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:56:32 CET 2014
Checking for gcc...
=== ztest29605.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest29605.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest29605.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest29605.c

Checking for shared library support...
=== ztest29605.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest29605.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest29605.so ztest29605.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest29605.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29605.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest29605.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29605 ztest29605.c
Checking for strerror... Yes.

=== ztest29605.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29605.c
Checking for unistd.h... Yes.

=== ztest29605.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29605.c
Checking for stdarg.h... Yes.

=== ztest29605.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29605.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest29605.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29605 ztest29605.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest29605.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29605.c
Checking for return value of vsnprintf()... Yes.

=== ztest29605.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29605.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:57:00 CET 2014
Checking for gcc...
=== ztest29922.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest29922.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest29922.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest29922.c

Checking for shared library support...
=== ztest29922.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest29922.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest29922.so ztest29922.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest29922.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29922.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest29922.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29922 ztest29922.c
Checking for strerror... Yes.

=== ztest29922.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29922.c
Checking for unistd.h... Yes.

=== ztest29922.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29922.c
Checking for stdarg.h... Yes.

=== ztest29922.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29922.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest29922.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29922 ztest29922.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest29922.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29922.c
Checking for return value of vsnprintf()... Yes.

=== ztest29922.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29922.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 04:57:46 CET 2014
Checking for gcc...
=== ztest30268.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest30268.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest30268.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest30268.c

Checking for shared library support...
=== ztest30268.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest30268.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest30268.so ztest30268.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest30268.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30268.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest30268.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30268 ztest30268.c
Checking for strerror... Yes.

=== ztest30268.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30268.c
Checking for unistd.h... Yes.

=== ztest30268.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30268.c
Checking for stdarg.h... Yes.

=== ztest30268.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30268.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest30268.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30268 ztest30268.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest30268.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30268.c
Checking for return value of vsnprintf()... Yes.

=== ztest30268.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30268.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 05:01:44 CET 2014
Checking for gcc...
=== ztest30694.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest30694.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest30694.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest30694.c

Checking for shared library support...
=== ztest30694.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest30694.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest30694.so ztest30694.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest30694.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30694.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest30694.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30694 ztest30694.c
Checking for strerror... Yes.

=== ztest30694.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30694.c
Checking for unistd.h... Yes.

=== ztest30694.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30694.c
Checking for stdarg.h... Yes.

=== ztest30694.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30694.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest30694.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30694 ztest30694.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest30694.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30694.c
Checking for return value of vsnprintf()... Yes.

=== ztest30694.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30694.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 05:09:01 CET 2014
Checking for gcc...
=== ztest31087.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31087.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31087.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31087.c

Checking for shared library support...
=== ztest31087.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31087.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31087.so ztest31087.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest31087.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31087.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31087.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31087 ztest31087.c
Checking for strerror... Yes.

=== ztest31087.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31087.c
Checking for unistd.h... Yes.

=== ztest31087.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31087.c
Checking for stdarg.h... Yes.

=== ztest31087.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31087.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31087.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31087 ztest31087.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31087.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31087.c
Checking for return value of vsnprintf()... Yes.

=== ztest31087.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31087.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 05:10:56 CET 2014
Checking for gcc...
=== ztest31483.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31483.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31483.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31483.c

Checking for shared library support...
=== ztest31483.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31483.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31483.so ztest31483.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest31483.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31483.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31483.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31483 ztest31483.c
Checking for strerror... Yes.

=== ztest31483.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31483.c
Checking for unistd.h... Yes.

=== ztest31483.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31483.c
Checking for stdarg.h... Yes.

=== ztest31483.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31483.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31483.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31483 ztest31483.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31483.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31483.c
Checking for return value of vsnprintf()... Yes.

=== ztest31483.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31483.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 05:18:22 CET 2014
Checking for gcc...
=== ztest32014.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest32014.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest32014.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest32014.c

Checking for shared library support...
=== ztest32014.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest32014.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest32014.so ztest32014.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest32014.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32014.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest32014.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32014 ztest32014.c
Checking for strerror... Yes.

=== ztest32014.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32014.c
Checking for unistd.h... Yes.

=== ztest32014.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32014.c
Checking for stdarg.h... Yes.

=== ztest32014.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32014.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest32014.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32014 ztest32014.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest32014.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32014.c
Checking for return value of vsnprintf()... Yes.

=== ztest32014.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32014.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 05:18:55 CET 2014
Checking for gcc...
=== ztest32330.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest32330.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest32330.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest32330.c

Checking for shared library support...
=== ztest32330.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest32330.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest32330.so ztest32330.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest32330.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32330.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest32330.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32330 ztest32330.c
Checking for strerror... Yes.

=== ztest32330.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32330.c
Checking for unistd.h... Yes.

=== ztest32330.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32330.c
Checking for stdarg.h... Yes.

=== ztest32330.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32330.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest32330.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32330 ztest32330.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest32330.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32330.c
Checking for return value of vsnprintf()... Yes.

=== ztest32330.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32330.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 05:20:20 CET 2014
Checking for gcc...
=== ztest32702.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest32702.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest32702.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest32702.c

Checking for shared library support...
=== ztest32702.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest32702.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest32702.so ztest32702.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest32702.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32702.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest32702.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32702 ztest32702.c
Checking for strerror... Yes.

=== ztest32702.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32702.c
Checking for unistd.h... Yes.

=== ztest32702.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32702.c
Checking for stdarg.h... Yes.

=== ztest32702.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32702.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest32702.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32702 ztest32702.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest32702.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32702.c
Checking for return value of vsnprintf()... Yes.

=== ztest32702.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32702.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 05:22:11 CET 2014
Checking for gcc...
=== ztest595.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest595.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest595.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest595.c

Checking for shared library support...
=== ztest595.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest595.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest595.so ztest595.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest595.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest595.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest595.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest595 ztest595.c
Checking for strerror... Yes.

=== ztest595.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest595.c
Checking for unistd.h... Yes.

=== ztest595.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest595.c
Checking for stdarg.h... Yes.

=== ztest595.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest595.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest595.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest595 ztest595.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest595.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest595.c
Checking for return value of vsnprintf()... Yes.

=== ztest595.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest595.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 05:29:36 CET 2014
Checking for gcc...
=== ztest1281.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1281.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1281.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1281.c

Checking for shared library support...
=== ztest1281.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1281.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1281.so ztest1281.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest1281.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1281.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1281.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1281 ztest1281.c
Checking for strerror... Yes.

=== ztest1281.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1281.c
Checking for unistd.h... Yes.

=== ztest1281.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1281.c
Checking for stdarg.h... Yes.

=== ztest1281.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1281.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1281.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1281 ztest1281.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1281.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1281.c
Checking for return value of vsnprintf()... Yes.

=== ztest1281.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1281.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 05:30:14 CET 2014
Checking for gcc...
=== ztest1759.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1759.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1759.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1759.c

Checking for shared library support...
=== ztest1759.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest1759.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1759.so ztest1759.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest1759.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1759.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1759.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1759 ztest1759.c
Checking for strerror... Yes.

=== ztest1759.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1759.c
Checking for unistd.h... Yes.

=== ztest1759.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1759.c
Checking for stdarg.h... Yes.

=== ztest1759.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1759.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1759.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1759 ztest1759.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1759.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1759.c
Checking for return value of vsnprintf()... Yes.

=== ztest1759.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1759.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 06:32:50 CET 2014
Checking for gcc...
=== ztest2833.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest2833.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2833.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest2833.c

Checking for shared library support...
=== ztest2833.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest2833.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2833.so ztest2833.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest2833.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2833.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2833.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2833 ztest2833.c
Checking for strerror... Yes.

=== ztest2833.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2833.c
Checking for unistd.h... Yes.

=== ztest2833.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2833.c
Checking for stdarg.h... Yes.

=== ztest2833.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2833.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2833.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2833 ztest2833.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2833.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2833.c
Checking for return value of vsnprintf()... Yes.

=== ztest2833.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2833.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 06:33:28 CET 2014
Checking for gcc...
=== ztest3159.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3159.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3159.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3159.c

Checking for shared library support...
=== ztest3159.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3159.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3159.so ztest3159.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest3159.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3159.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3159.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3159 ztest3159.c
Checking for strerror... Yes.

=== ztest3159.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3159.c
Checking for unistd.h... Yes.

=== ztest3159.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3159.c
Checking for stdarg.h... Yes.

=== ztest3159.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3159.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3159.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3159 ztest3159.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3159.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3159.c
Checking for return value of vsnprintf()... Yes.

=== ztest3159.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3159.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 06:34:31 CET 2014
Checking for gcc...
=== ztest3499.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3499.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3499.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3499.c

Checking for shared library support...
=== ztest3499.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3499.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3499.so ztest3499.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest3499.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3499.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3499.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3499 ztest3499.c
Checking for strerror... Yes.

=== ztest3499.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3499.c
Checking for unistd.h... Yes.

=== ztest3499.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3499.c
Checking for stdarg.h... Yes.

=== ztest3499.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3499.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3499.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3499 ztest3499.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3499.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3499.c
Checking for return value of vsnprintf()... Yes.

=== ztest3499.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3499.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 06:39:01 CET 2014
Checking for gcc...
=== ztest3967.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest3967.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3967.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest3967.c

Checking for shared library support...
=== ztest3967.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest3967.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3967.so ztest3967.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest3967.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3967.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3967.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3967 ztest3967.c
Checking for strerror... Yes.

=== ztest3967.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3967.c
Checking for unistd.h... Yes.

=== ztest3967.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3967.c
Checking for stdarg.h... Yes.

=== ztest3967.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3967.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3967.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3967 ztest3967.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3967.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3967.c
Checking for return value of vsnprintf()... Yes.

=== ztest3967.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3967.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 06:39:17 CET 2014
Checking for gcc...
=== ztest4285.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4285.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4285.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4285.c

Checking for shared library support...
=== ztest4285.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4285.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4285.so ztest4285.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest4285.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4285.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4285.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4285 ztest4285.c
Checking for strerror... Yes.

=== ztest4285.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4285.c
Checking for unistd.h... Yes.

=== ztest4285.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4285.c
Checking for stdarg.h... Yes.

=== ztest4285.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4285.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4285.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4285 ztest4285.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4285.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4285.c
Checking for return value of vsnprintf()... Yes.

=== ztest4285.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4285.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 06:40:03 CET 2014
Checking for gcc...
=== ztest4633.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4633.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4633.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4633.c

Checking for shared library support...
=== ztest4633.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4633.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4633.so ztest4633.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest4633.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4633.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4633.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4633 ztest4633.c
Checking for strerror... Yes.

=== ztest4633.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4633.c
Checking for unistd.h... Yes.

=== ztest4633.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4633.c
Checking for stdarg.h... Yes.

=== ztest4633.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4633.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4633.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4633 ztest4633.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4633.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4633.c
Checking for return value of vsnprintf()... Yes.

=== ztest4633.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4633.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 06:45:03 CET 2014
Checking for gcc...
=== ztest5095.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5095.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5095.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5095.c

Checking for shared library support...
=== ztest5095.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5095.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5095.so ztest5095.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest5095.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5095.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5095.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5095 ztest5095.c
Checking for strerror... Yes.

=== ztest5095.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5095.c
Checking for unistd.h... Yes.

=== ztest5095.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5095.c
Checking for stdarg.h... Yes.

=== ztest5095.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5095.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5095.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5095 ztest5095.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5095.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5095.c
Checking for return value of vsnprintf()... Yes.

=== ztest5095.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5095.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 06:45:38 CET 2014
Checking for gcc...
=== ztest5440.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5440.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5440.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5440.c

Checking for shared library support...
=== ztest5440.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5440.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5440.so ztest5440.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest5440.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5440.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5440.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5440 ztest5440.c
Checking for strerror... Yes.

=== ztest5440.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5440.c
Checking for unistd.h... Yes.

=== ztest5440.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5440.c
Checking for stdarg.h... Yes.

=== ztest5440.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5440.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5440.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5440 ztest5440.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5440.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5440.c
Checking for return value of vsnprintf()... Yes.

=== ztest5440.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5440.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 06:47:43 CET 2014
Checking for gcc...
=== ztest5860.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest5860.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5860.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest5860.c

Checking for shared library support...
=== ztest5860.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest5860.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5860.so ztest5860.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest5860.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5860.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5860.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5860 ztest5860.c
Checking for strerror... Yes.

=== ztest5860.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5860.c
Checking for unistd.h... Yes.

=== ztest5860.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5860.c
Checking for stdarg.h... Yes.

=== ztest5860.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5860.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5860.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5860 ztest5860.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5860.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5860.c
Checking for return value of vsnprintf()... Yes.

=== ztest5860.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5860.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 06:56:44 CET 2014
Checking for gcc...
=== ztest6448.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest6448.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6448.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest6448.c

Checking for shared library support...
=== ztest6448.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest6448.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6448.so ztest6448.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest6448.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6448.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6448.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6448 ztest6448.c
Checking for strerror... Yes.

=== ztest6448.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6448.c
Checking for unistd.h... Yes.

=== ztest6448.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6448.c
Checking for stdarg.h... Yes.

=== ztest6448.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6448.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6448.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6448 ztest6448.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6448.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6448.c
Checking for return value of vsnprintf()... Yes.

=== ztest6448.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6448.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 06:57:35 CET 2014
Checking for gcc...
=== ztest6796.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest6796.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6796.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest6796.c

Checking for shared library support...
=== ztest6796.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest6796.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6796.so ztest6796.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest6796.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6796.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6796.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6796 ztest6796.c
Checking for strerror... Yes.

=== ztest6796.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6796.c
Checking for unistd.h... Yes.

=== ztest6796.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6796.c
Checking for stdarg.h... Yes.

=== ztest6796.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6796.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6796.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6796 ztest6796.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6796.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6796.c
Checking for return value of vsnprintf()... Yes.

=== ztest6796.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6796.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 06:59:33 CET 2014
Checking for gcc...
=== ztest7207.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest7207.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7207.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest7207.c

Checking for shared library support...
=== ztest7207.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest7207.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7207.so ztest7207.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest7207.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7207.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7207.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7207 ztest7207.c
Checking for strerror... Yes.

=== ztest7207.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7207.c
Checking for unistd.h... Yes.

=== ztest7207.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7207.c
Checking for stdarg.h... Yes.

=== ztest7207.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7207.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7207.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7207 ztest7207.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7207.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7207.c
Checking for return value of vsnprintf()... Yes.

=== ztest7207.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7207.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:01:13 CET 2014
Checking for gcc...
=== ztest7608.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest7608.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7608.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest7608.c

Checking for shared library support...
=== ztest7608.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest7608.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7608.so ztest7608.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest7608.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7608.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7608.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7608 ztest7608.c
Checking for strerror... Yes.

=== ztest7608.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7608.c
Checking for unistd.h... Yes.

=== ztest7608.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7608.c
Checking for stdarg.h... Yes.

=== ztest7608.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7608.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7608.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7608 ztest7608.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7608.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7608.c
Checking for return value of vsnprintf()... Yes.

=== ztest7608.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7608.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:10:42 CET 2014
Checking for gcc...
=== ztest8119.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest8119.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8119.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest8119.c

Checking for shared library support...
=== ztest8119.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest8119.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8119.so ztest8119.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest8119.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8119.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8119.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8119 ztest8119.c
Checking for strerror... Yes.

=== ztest8119.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8119.c
Checking for unistd.h... Yes.

=== ztest8119.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8119.c
Checking for stdarg.h... Yes.

=== ztest8119.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8119.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8119.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8119 ztest8119.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8119.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8119.c
Checking for return value of vsnprintf()... Yes.

=== ztest8119.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8119.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:11:00 CET 2014
Checking for gcc...
=== ztest8441.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest8441.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8441.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest8441.c

Checking for shared library support...
=== ztest8441.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest8441.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8441.so ztest8441.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest8441.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8441.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8441.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8441 ztest8441.c
Checking for strerror... Yes.

=== ztest8441.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8441.c
Checking for unistd.h... Yes.

=== ztest8441.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8441.c
Checking for stdarg.h... Yes.

=== ztest8441.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8441.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8441.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8441 ztest8441.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8441.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8441.c
Checking for return value of vsnprintf()... Yes.

=== ztest8441.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8441.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:18:19 CET 2014
Checking for gcc...
=== ztest9035.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest9035.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9035.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest9035.c

Checking for shared library support...
=== ztest9035.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest9035.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9035.so ztest9035.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest9035.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9035.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9035.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9035 ztest9035.c
Checking for strerror... Yes.

=== ztest9035.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9035.c
Checking for unistd.h... Yes.

=== ztest9035.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9035.c
Checking for stdarg.h... Yes.

=== ztest9035.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9035.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9035.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9035 ztest9035.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9035.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9035.c
Checking for return value of vsnprintf()... Yes.

=== ztest9035.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9035.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:18:43 CET 2014
Checking for gcc...
=== ztest9355.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest9355.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9355.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest9355.c

Checking for shared library support...
=== ztest9355.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest9355.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9355.so ztest9355.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest9355.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9355.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9355.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9355 ztest9355.c
Checking for strerror... Yes.

=== ztest9355.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9355.c
Checking for unistd.h... Yes.

=== ztest9355.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9355.c
Checking for stdarg.h... Yes.

=== ztest9355.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9355.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9355.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9355 ztest9355.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9355.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9355.c
Checking for return value of vsnprintf()... Yes.

=== ztest9355.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9355.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:23:56 CET 2014
Checking for gcc...
=== ztest9805.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest9805.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9805.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest9805.c

Checking for shared library support...
=== ztest9805.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest9805.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9805.so ztest9805.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest9805.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9805.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9805.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9805 ztest9805.c
Checking for strerror... Yes.

=== ztest9805.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9805.c
Checking for unistd.h... Yes.

=== ztest9805.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9805.c
Checking for stdarg.h... Yes.

=== ztest9805.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9805.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9805.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9805 ztest9805.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9805.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9805.c
Checking for return value of vsnprintf()... Yes.

=== ztest9805.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9805.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:24:31 CET 2014
Checking for gcc...
=== ztest10158.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest10158.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10158.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest10158.c

Checking for shared library support...
=== ztest10158.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest10158.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10158.so ztest10158.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest10158.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10158.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10158.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10158 ztest10158.c
Checking for strerror... Yes.

=== ztest10158.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10158.c
Checking for unistd.h... Yes.

=== ztest10158.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10158.c
Checking for stdarg.h... Yes.

=== ztest10158.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10158.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10158.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10158 ztest10158.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10158.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10158.c
Checking for return value of vsnprintf()... Yes.

=== ztest10158.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10158.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:30:17 CET 2014
Checking for gcc...
=== ztest10680.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest10680.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10680.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest10680.c

Checking for shared library support...
=== ztest10680.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest10680.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10680.so ztest10680.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest10680.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10680.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10680.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10680 ztest10680.c
Checking for strerror... Yes.

=== ztest10680.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10680.c
Checking for unistd.h... Yes.

=== ztest10680.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10680.c
Checking for stdarg.h... Yes.

=== ztest10680.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10680.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10680.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10680 ztest10680.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10680.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10680.c
Checking for return value of vsnprintf()... Yes.

=== ztest10680.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10680.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:31:59 CET 2014
Checking for gcc...
=== ztest11083.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest11083.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11083.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest11083.c

Checking for shared library support...
=== ztest11083.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest11083.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11083.so ztest11083.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest11083.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11083.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11083.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11083 ztest11083.c
Checking for strerror... Yes.

=== ztest11083.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11083.c
Checking for unistd.h... Yes.

=== ztest11083.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11083.c
Checking for stdarg.h... Yes.

=== ztest11083.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11083.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11083.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11083 ztest11083.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11083.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11083.c
Checking for return value of vsnprintf()... Yes.

=== ztest11083.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11083.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:32:45 CET 2014
Checking for gcc...
=== ztest11430.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest11430.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11430.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest11430.c

Checking for shared library support...
=== ztest11430.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest11430.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11430.so ztest11430.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest11430.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11430.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11430.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11430 ztest11430.c
Checking for strerror... Yes.

=== ztest11430.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11430.c
Checking for unistd.h... Yes.

=== ztest11430.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11430.c
Checking for stdarg.h... Yes.

=== ztest11430.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11430.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11430.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11430 ztest11430.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11430.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11430.c
Checking for return value of vsnprintf()... Yes.

=== ztest11430.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11430.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:33:24 CET 2014
Checking for gcc...
=== ztest11781.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest11781.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11781.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest11781.c

Checking for shared library support...
=== ztest11781.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest11781.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11781.so ztest11781.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest11781.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11781.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11781.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11781 ztest11781.c
Checking for strerror... Yes.

=== ztest11781.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11781.c
Checking for unistd.h... Yes.

=== ztest11781.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11781.c
Checking for stdarg.h... Yes.

=== ztest11781.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11781.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11781.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11781 ztest11781.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11781.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11781.c
Checking for return value of vsnprintf()... Yes.

=== ztest11781.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11781.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:34:30 CET 2014
Checking for gcc...
=== ztest12129.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest12129.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest12129.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest12129.c

Checking for shared library support...
=== ztest12129.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest12129.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest12129.so ztest12129.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest12129.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12129.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest12129.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12129 ztest12129.c
Checking for strerror... Yes.

=== ztest12129.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12129.c
Checking for unistd.h... Yes.

=== ztest12129.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12129.c
Checking for stdarg.h... Yes.

=== ztest12129.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12129.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest12129.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12129 ztest12129.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest12129.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12129.c
Checking for return value of vsnprintf()... Yes.

=== ztest12129.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12129.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:35:49 CET 2014
Checking for gcc...
=== ztest12477.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest12477.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest12477.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest12477.c

Checking for shared library support...
=== ztest12477.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest12477.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest12477.so ztest12477.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest12477.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12477.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest12477.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12477 ztest12477.c
Checking for strerror... Yes.

=== ztest12477.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12477.c
Checking for unistd.h... Yes.

=== ztest12477.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12477.c
Checking for stdarg.h... Yes.

=== ztest12477.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12477.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest12477.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12477 ztest12477.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest12477.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12477.c
Checking for return value of vsnprintf()... Yes.

=== ztest12477.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12477.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:36:51 CET 2014
Checking for gcc...
=== ztest12817.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest12817.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest12817.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest12817.c

Checking for shared library support...
=== ztest12817.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest12817.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest12817.so ztest12817.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest12817.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12817.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest12817.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12817 ztest12817.c
Checking for strerror... Yes.

=== ztest12817.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12817.c
Checking for unistd.h... Yes.

=== ztest12817.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12817.c
Checking for stdarg.h... Yes.

=== ztest12817.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12817.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest12817.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12817 ztest12817.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest12817.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12817.c
Checking for return value of vsnprintf()... Yes.

=== ztest12817.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12817.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:38:56 CET 2014
Checking for gcc...
=== ztest13210.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest13210.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13210.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest13210.c

Checking for shared library support...
=== ztest13210.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest13210.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest13210.so ztest13210.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest13210.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13210.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13210.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13210 ztest13210.c
Checking for strerror... Yes.

=== ztest13210.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13210.c
Checking for unistd.h... Yes.

=== ztest13210.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13210.c
Checking for stdarg.h... Yes.

=== ztest13210.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13210.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13210.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13210 ztest13210.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13210.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13210.c
Checking for return value of vsnprintf()... Yes.

=== ztest13210.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13210.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Oct 29 07:43:55 CET 2014
Checking for gcc...
=== ztest13664.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest13664.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13664.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest13664.c

Checking for shared library support...
=== ztest13664.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest13664.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest13664.so ztest13664.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest13664.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13664.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13664.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13664 ztest13664.c
Checking for strerror... Yes.

=== ztest13664.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13664.c
Checking for unistd.h... Yes.

=== ztest13664.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13664.c
Checking for stdarg.h... Yes.

=== ztest13664.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13664.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13664.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13664 ztest13664.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13664.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13664.c
Checking for return value of vsnprintf()... Yes.

=== ztest13664.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13664.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


